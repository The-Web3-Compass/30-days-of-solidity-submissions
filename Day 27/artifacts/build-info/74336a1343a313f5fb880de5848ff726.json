{
	"id": "74336a1343a313f5fb880de5848ff726",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"YieldFarming.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title YieldFarming\r\n * @dev A simple yield farming contract where users stake tokens to earn rewards over time.\r\n * Rewards are distributed based on staking duration and amount.\r\n */\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract YieldFarming is Ownable {\r\n    IERC20 public stakingToken;      // Token that users stake\r\n    IERC20 public rewardToken;       // Token that users earn as rewards\r\n\r\n    uint256 public rewardRate;       // Reward rate per second\r\n    uint256 public totalStaked;      // Total tokens staked in the contract\r\n\r\n    struct StakeInfo {\r\n        uint256 amount;              // Amount of tokens staked\r\n        uint256 rewardDebt;          // Rewards already claimed\r\n        uint256 lastUpdated;         // Last update timestamp\r\n    }\r\n\r\n    mapping(address => StakeInfo) public stakes;\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Unstaked(address indexed user, uint256 amount);\r\n    event RewardClaimed(address indexed user, uint256 reward);\r\n\r\n    constructor(\r\n        address _stakingToken,\r\n        address _rewardToken,\r\n        uint256 _rewardRate\r\n    ) Ownable(msg.sender) {\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardToken = IERC20(_rewardToken);\r\n        rewardRate = _rewardRate; // e.g., tokens per second per staked token\r\n    }\r\n\r\n    /**\r\n     * @dev Stake tokens to start earning rewards\r\n     */\r\n    function stake(uint256 _amount) external {\r\n        require(_amount > 0, \"Cannot stake 0 tokens\");\r\n\r\n        _updateReward(msg.sender);\r\n\r\n        stakingToken.transferFrom(msg.sender, address(this), _amount);\r\n        stakes[msg.sender].amount += _amount;\r\n        totalStaked += _amount;\r\n\r\n        emit Staked(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw staked tokens\r\n     */\r\n    function unstake(uint256 _amount) external {\r\n        StakeInfo storage user = stakes[msg.sender];\r\n        require(user.amount >= _amount, \"Insufficient staked balance\");\r\n\r\n        _updateReward(msg.sender);\r\n\r\n        user.amount -= _amount;\r\n        totalStaked -= _amount;\r\n        stakingToken.transfer(msg.sender, _amount);\r\n\r\n        emit Unstaked(msg.sender, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Claim accumulated rewards\r\n     */\r\n    function claimRewards() external {\r\n        _updateReward(msg.sender);\r\n\r\n        uint256 pending = _calculateReward(msg.sender);\r\n        require(pending > 0, \"No rewards to claim\");\r\n\r\n        stakes[msg.sender].rewardDebt += pending;\r\n        rewardToken.transfer(msg.sender, pending);\r\n\r\n        emit RewardClaimed(msg.sender, pending);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to update user's reward state\r\n     */\r\n    function _updateReward(address _user) internal {\r\n        StakeInfo storage user = stakes[_user];\r\n        if (user.amount > 0) {\r\n            uint256 reward = _calculateReward(_user);\r\n            user.rewardDebt += reward;\r\n        }\r\n        user.lastUpdated = block.timestamp;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculate pending reward for a user\r\n     */\r\n    function _calculateReward(address _user) internal view returns (uint256) {\r\n        StakeInfo memory user = stakes[_user];\r\n        if (user.amount == 0) return 0;\r\n\r\n        uint256 timeElapsed = block.timestamp - user.lastUpdated;\r\n        uint256 reward = (user.amount * rewardRate * timeElapsed) / 1e18;\r\n\r\n        return reward;\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can update reward rate\r\n     */\r\n    function updateRewardRate(uint256 _newRate) external onlyOwner {\r\n        rewardRate = _newRate;\r\n    }\r\n\r\n    /**\r\n     * @dev Emergency withdraw (without rewards)\r\n     */\r\n    function emergencyWithdraw() external {\r\n        StakeInfo storage user = stakes[msg.sender];\r\n        uint256 staked = user.amount;\r\n        require(staked > 0, \"Nothing to withdraw\");\r\n\r\n        user.amount = 0;\r\n        totalStaked -= staked;\r\n        stakingToken.transfer(msg.sender, staked);\r\n\r\n        emit Unstaked(msg.sender, staked);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"YieldFarming.sol": {
				"YieldFarming": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdated",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newRate",
									"type": "uint256"
								}
							],
							"name": "updateRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"claimRewards()": {
								"details": "Claim accumulated rewards"
							},
							"emergencyWithdraw()": {
								"details": "Emergency withdraw (without rewards)"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"details": "Stake tokens to start earning rewards"
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unstake(uint256)": {
								"details": "Withdraw staked tokens"
							},
							"updateRewardRate(uint256)": {
								"details": "Owner can update reward rate"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"YieldFarming.sol\":370:4130  contract YieldFarming is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"YieldFarming.sol\":1153:1464  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"YieldFarming.sol\":1273:1283  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"YieldFarming.sol\":1318:1331  _stakingToken */\n  dup3\n    /* \"YieldFarming.sol\":1296:1308  stakingToken */\n  0x01\n  0x00\n    /* \"YieldFarming.sol\":1296:1332  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"YieldFarming.sol\":1364:1376  _rewardToken */\n  dup2\n    /* \"YieldFarming.sol\":1343:1354  rewardToken */\n  0x02\n  0x00\n    /* \"YieldFarming.sol\":1343:1377  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"YieldFarming.sol\":1401:1412  _rewardRate */\n  dup1\n    /* \"YieldFarming.sol\":1388:1398  rewardRate */\n  0x03\n    /* \"YieldFarming.sol\":1388:1412  rewardRate = _rewardRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"YieldFarming.sol\":1153:1464  constructor(... */\n  pop\n  pop\n  pop\n    /* \"YieldFarming.sol\":370:4130  contract YieldFarming is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_22:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_23:\n    /* \"#utility.yul\":1001:1025   */\n  tag_40\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_41:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_24:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_43\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_46\n  tag_16\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1326:1445   */\ntag_45:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_47\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_48\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_49\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_25:\n    /* \"#utility.yul\":1961:1985   */\n  tag_51\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_19\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_9:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_53\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"YieldFarming.sol\":370:4130  contract YieldFarming is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"YieldFarming.sol\":370:4130  contract YieldFarming is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa694fc3a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x817b1cd2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9ef3a261\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"YieldFarming.sol\":919:962  mapping(address => StakeInfo) public stakes */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"YieldFarming.sol\":1945:2329  function unstake(uint256 _amount) external {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"YieldFarming.sol\":2394:2741  function claimRewards() external {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"YieldFarming.sol\":410:436  IERC20 public stakingToken */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"YieldFarming.sol\":550:575  uint256 public rewardRate */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"YieldFarming.sol\":614:640  uint256 public totalStaked */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"YieldFarming.sol\":3598:3701  function updateRewardRate(uint256 _newRate) external onlyOwner {... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"YieldFarming.sol\":1541:1883  function stake(uint256 _amount) external {... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"YieldFarming.sol\":3777:4127  function emergencyWithdraw() external {... */\n    tag_13:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"YieldFarming.sol\":474:499  IERC20 public rewardToken */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"YieldFarming.sol\":919:962  mapping(address => StakeInfo) public stakes */\n    tag_21:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"YieldFarming.sol\":1945:2329  function unstake(uint256 _amount) external {... */\n    tag_27:\n        /* \"YieldFarming.sol\":1999:2021  StakeInfo storage user */\n      0x00\n        /* \"YieldFarming.sol\":2024:2030  stakes */\n      0x05\n        /* \"YieldFarming.sol\":2024:2042  stakes[msg.sender] */\n      0x00\n        /* \"YieldFarming.sol\":2031:2041  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2024:2042  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"YieldFarming.sol\":1999:2042  StakeInfo storage user = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":2076:2083  _amount */\n      dup2\n        /* \"YieldFarming.sol\":2061:2065  user */\n      dup2\n        /* \"YieldFarming.sol\":2061:2072  user.amount */\n      0x00\n      add\n      sload\n        /* \"YieldFarming.sol\":2061:2083  user.amount >= _amount */\n      lt\n      iszero\n        /* \"YieldFarming.sol\":2053:2115  require(user.amount >= _amount, \"Insufficient staked balance\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"YieldFarming.sol\":2128:2153  _updateReward(msg.sender) */\n      tag_65\n        /* \"YieldFarming.sol\":2142:2152  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2128:2141  _updateReward */\n      tag_66\n        /* \"YieldFarming.sol\":2128:2153  _updateReward(msg.sender) */\n      jump\t// in\n    tag_65:\n        /* \"YieldFarming.sol\":2181:2188  _amount */\n      dup2\n        /* \"YieldFarming.sol\":2166:2170  user */\n      dup2\n        /* \"YieldFarming.sol\":2166:2177  user.amount */\n      0x00\n      add\n      0x00\n        /* \"YieldFarming.sol\":2166:2188  user.amount -= _amount */\n      dup3\n      dup3\n      sload\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":2214:2221  _amount */\n      dup2\n        /* \"YieldFarming.sol\":2199:2210  totalStaked */\n      0x04\n      0x00\n        /* \"YieldFarming.sol\":2199:2221  totalStaked -= _amount */\n      dup3\n      dup3\n      sload\n      tag_69\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_69:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":2232:2244  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"YieldFarming.sol\":2232:2253  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"YieldFarming.sol\":2254:2264  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2266:2273  _amount */\n      dup5\n        /* \"YieldFarming.sol\":2232:2274  stakingToken.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      pop\n        /* \"YieldFarming.sol\":2301:2311  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2292:2321  Unstaked(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"YieldFarming.sol\":2313:2320  _amount */\n      dup4\n        /* \"YieldFarming.sol\":2292:2321  Unstaked(msg.sender, _amount) */\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"YieldFarming.sol\":1988:2329  {... */\n      pop\n        /* \"YieldFarming.sol\":1945:2329  function unstake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"YieldFarming.sol\":2394:2741  function claimRewards() external {... */\n    tag_29:\n        /* \"YieldFarming.sol\":2438:2463  _updateReward(msg.sender) */\n      tag_78\n        /* \"YieldFarming.sol\":2452:2462  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2438:2451  _updateReward */\n      tag_66\n        /* \"YieldFarming.sol\":2438:2463  _updateReward(msg.sender) */\n      jump\t// in\n    tag_78:\n        /* \"YieldFarming.sol\":2476:2491  uint256 pending */\n      0x00\n        /* \"YieldFarming.sol\":2494:2522  _calculateReward(msg.sender) */\n      tag_79\n        /* \"YieldFarming.sol\":2511:2521  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2494:2510  _calculateReward */\n      tag_80\n        /* \"YieldFarming.sol\":2494:2522  _calculateReward(msg.sender) */\n      jump\t// in\n    tag_79:\n        /* \"YieldFarming.sol\":2476:2522  uint256 pending = _calculateReward(msg.sender) */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":2551:2552  0 */\n      0x00\n        /* \"YieldFarming.sol\":2541:2548  pending */\n      dup2\n        /* \"YieldFarming.sol\":2541:2552  pending > 0 */\n      gt\n        /* \"YieldFarming.sol\":2533:2576  require(pending > 0, \"No rewards to claim\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"YieldFarming.sol\":2622:2629  pending */\n      dup1\n        /* \"YieldFarming.sol\":2589:2595  stakes */\n      0x05\n        /* \"YieldFarming.sol\":2589:2607  stakes[msg.sender] */\n      0x00\n        /* \"YieldFarming.sol\":2596:2606  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2589:2607  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"YieldFarming.sol\":2589:2618  stakes[msg.sender].rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"YieldFarming.sol\":2589:2629  stakes[msg.sender].rewardDebt += pending */\n      dup3\n      dup3\n      sload\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":2640:2651  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"YieldFarming.sol\":2640:2660  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"YieldFarming.sol\":2661:2671  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2673:2680  pending */\n      dup4\n        /* \"YieldFarming.sol\":2640:2681  rewardToken.transfer(msg.sender, pending) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_89:\n      pop\n        /* \"YieldFarming.sol\":2713:2723  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":2699:2733  RewardClaimed(msg.sender, pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"YieldFarming.sol\":2725:2732  pending */\n      dup3\n        /* \"YieldFarming.sol\":2699:2733  RewardClaimed(msg.sender, pending) */\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"YieldFarming.sol\":2427:2741  {... */\n      pop\n        /* \"YieldFarming.sol\":2394:2741  function claimRewards() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"YieldFarming.sol\":410:436  IERC20 public stakingToken */\n    tag_33:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"YieldFarming.sol\":550:575  uint256 public rewardRate */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"YieldFarming.sol\":614:640  uint256 public totalStaked */\n    tag_41:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"YieldFarming.sol\":3598:3701  function updateRewardRate(uint256 _newRate) external onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_99:\n        /* \"YieldFarming.sol\":3685:3693  _newRate */\n      dup1\n        /* \"YieldFarming.sol\":3672:3682  rewardRate */\n      0x03\n        /* \"YieldFarming.sol\":3672:3693  rewardRate = _newRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":3598:3701  function updateRewardRate(uint256 _newRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"YieldFarming.sol\":1541:1883  function stake(uint256 _amount) external {... */\n    tag_52:\n        /* \"YieldFarming.sol\":1611:1612  0 */\n      0x00\n        /* \"YieldFarming.sol\":1601:1608  _amount */\n      dup2\n        /* \"YieldFarming.sol\":1601:1612  _amount > 0 */\n      gt\n        /* \"YieldFarming.sol\":1593:1638  require(_amount > 0, \"Cannot stake 0 tokens\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"YieldFarming.sol\":1651:1676  _updateReward(msg.sender) */\n      tag_105\n        /* \"YieldFarming.sol\":1665:1675  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":1651:1664  _updateReward */\n      tag_66\n        /* \"YieldFarming.sol\":1651:1676  _updateReward(msg.sender) */\n      jump\t// in\n    tag_105:\n        /* \"YieldFarming.sol\":1689:1701  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"YieldFarming.sol\":1689:1714  stakingToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"YieldFarming.sol\":1715:1725  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":1735:1739  this */\n      address\n        /* \"YieldFarming.sol\":1742:1749  _amount */\n      dup5\n        /* \"YieldFarming.sol\":1689:1750  stakingToken.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_110:\n      pop\n        /* \"YieldFarming.sol\":1790:1797  _amount */\n      dup1\n        /* \"YieldFarming.sol\":1761:1767  stakes */\n      0x05\n        /* \"YieldFarming.sol\":1761:1779  stakes[msg.sender] */\n      0x00\n        /* \"YieldFarming.sol\":1768:1778  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":1761:1779  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"YieldFarming.sol\":1761:1786  stakes[msg.sender].amount */\n      0x00\n      add\n      0x00\n        /* \"YieldFarming.sol\":1761:1797  stakes[msg.sender].amount += _amount */\n      dup3\n      dup3\n      sload\n      tag_111\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_111:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":1823:1830  _amount */\n      dup1\n        /* \"YieldFarming.sol\":1808:1819  totalStaked */\n      0x04\n      0x00\n        /* \"YieldFarming.sol\":1808:1830  totalStaked += _amount */\n      dup3\n      dup3\n      sload\n      tag_112\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_112:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":1855:1865  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":1848:1875  Staked(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"YieldFarming.sol\":1867:1874  _amount */\n      dup3\n        /* \"YieldFarming.sol\":1848:1875  Staked(msg.sender, _amount) */\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"YieldFarming.sol\":1541:1883  function stake(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"YieldFarming.sol\":3777:4127  function emergencyWithdraw() external {... */\n    tag_54:\n        /* \"YieldFarming.sol\":3826:3848  StakeInfo storage user */\n      0x00\n        /* \"YieldFarming.sol\":3851:3857  stakes */\n      0x05\n        /* \"YieldFarming.sol\":3851:3869  stakes[msg.sender] */\n      0x00\n        /* \"YieldFarming.sol\":3858:3868  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":3851:3869  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"YieldFarming.sol\":3826:3869  StakeInfo storage user = stakes[msg.sender] */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":3880:3894  uint256 staked */\n      0x00\n        /* \"YieldFarming.sol\":3897:3901  user */\n      dup2\n        /* \"YieldFarming.sol\":3897:3908  user.amount */\n      0x00\n      add\n      sload\n        /* \"YieldFarming.sol\":3880:3908  uint256 staked = user.amount */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":3936:3937  0 */\n      0x00\n        /* \"YieldFarming.sol\":3927:3933  staked */\n      dup2\n        /* \"YieldFarming.sol\":3927:3937  staked > 0 */\n      gt\n        /* \"YieldFarming.sol\":3919:3961  require(staked > 0, \"Nothing to withdraw\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"YieldFarming.sol\":3988:3989  0 */\n      0x00\n        /* \"YieldFarming.sol\":3974:3978  user */\n      dup3\n        /* \"YieldFarming.sol\":3974:3985  user.amount */\n      0x00\n      add\n        /* \"YieldFarming.sol\":3974:3989  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":4015:4021  staked */\n      dup1\n        /* \"YieldFarming.sol\":4000:4011  totalStaked */\n      0x04\n      0x00\n        /* \"YieldFarming.sol\":4000:4021  totalStaked -= staked */\n      dup3\n      dup3\n      sload\n      tag_118\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_118:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":4032:4044  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"YieldFarming.sol\":4032:4053  stakingToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"YieldFarming.sol\":4054:4064  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":4066:4072  staked */\n      dup4\n        /* \"YieldFarming.sol\":4032:4073  stakingToken.transfer(msg.sender, staked) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_122:\n      pop\n        /* \"YieldFarming.sol\":4100:4110  msg.sender */\n      caller\n        /* \"YieldFarming.sol\":4091:4119  Unstaked(msg.sender, staked) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75\n        /* \"YieldFarming.sol\":4112:4118  staked */\n      dup3\n        /* \"YieldFarming.sol\":4091:4119  Unstaked(msg.sender, staked) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"YieldFarming.sol\":3815:4127  {... */\n      pop\n      pop\n        /* \"YieldFarming.sol\":3777:4127  function emergencyWithdraw() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_127\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"YieldFarming.sol\":474:499  IERC20 public rewardToken */\n    tag_59:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"YieldFarming.sol\":2828:3115  function _updateReward(address _user) internal {... */\n    tag_66:\n        /* \"YieldFarming.sol\":2886:2908  StakeInfo storage user */\n      0x00\n        /* \"YieldFarming.sol\":2911:2917  stakes */\n      0x05\n        /* \"YieldFarming.sol\":2911:2924  stakes[_user] */\n      0x00\n        /* \"YieldFarming.sol\":2918:2923  _user */\n      dup4\n        /* \"YieldFarming.sol\":2911:2924  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"YieldFarming.sol\":2886:2924  StakeInfo storage user = stakes[_user] */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":2953:2954  0 */\n      0x00\n        /* \"YieldFarming.sol\":2939:2943  user */\n      dup2\n        /* \"YieldFarming.sol\":2939:2950  user.amount */\n      0x00\n      add\n      sload\n        /* \"YieldFarming.sol\":2939:2954  user.amount > 0 */\n      gt\n        /* \"YieldFarming.sol\":2935:3063  if (user.amount > 0) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"YieldFarming.sol\":2971:2985  uint256 reward */\n      0x00\n        /* \"YieldFarming.sol\":2988:3011  _calculateReward(_user) */\n      tag_132\n        /* \"YieldFarming.sol\":3005:3010  _user */\n      dup4\n        /* \"YieldFarming.sol\":2988:3004  _calculateReward */\n      tag_80\n        /* \"YieldFarming.sol\":2988:3011  _calculateReward(_user) */\n      jump\t// in\n    tag_132:\n        /* \"YieldFarming.sol\":2971:3011  uint256 reward = _calculateReward(_user) */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":3045:3051  reward */\n      dup1\n        /* \"YieldFarming.sol\":3026:3030  user */\n      dup3\n        /* \"YieldFarming.sol\":3026:3041  user.rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"YieldFarming.sol\":3026:3051  user.rewardDebt += reward */\n      dup3\n      dup3\n      sload\n      tag_133\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_133:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":2956:3063  {... */\n      pop\n        /* \"YieldFarming.sol\":2935:3063  if (user.amount > 0) {... */\n    tag_131:\n        /* \"YieldFarming.sol\":3092:3107  block.timestamp */\n      timestamp\n        /* \"YieldFarming.sol\":3073:3077  user */\n      dup2\n        /* \"YieldFarming.sol\":3073:3089  user.lastUpdated */\n      0x02\n      add\n        /* \"YieldFarming.sol\":3073:3107  user.lastUpdated = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"YieldFarming.sol\":2875:3115  {... */\n      pop\n        /* \"YieldFarming.sol\":2828:3115  function _updateReward(address _user) internal {... */\n      pop\n      jump\t// out\n        /* \"YieldFarming.sol\":3190:3530  function _calculateReward(address _user) internal view returns (uint256) {... */\n    tag_80:\n        /* \"YieldFarming.sol\":3254:3261  uint256 */\n      0x00\n        /* \"YieldFarming.sol\":3274:3295  StakeInfo memory user */\n      0x00\n        /* \"YieldFarming.sol\":3298:3304  stakes */\n      0x05\n        /* \"YieldFarming.sol\":3298:3311  stakes[_user] */\n      0x00\n        /* \"YieldFarming.sol\":3305:3310  _user */\n      dup5\n        /* \"YieldFarming.sol\":3298:3311  stakes[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"YieldFarming.sol\":3274:3311  StakeInfo memory user = stakes[_user] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"YieldFarming.sol\":3341:3342  0 */\n      0x00\n        /* \"YieldFarming.sol\":3326:3330  user */\n      dup2\n        /* \"YieldFarming.sol\":3326:3337  user.amount */\n      0x00\n      add\n      mload\n        /* \"YieldFarming.sol\":3326:3342  user.amount == 0 */\n      sub\n        /* \"YieldFarming.sol\":3322:3352  if (user.amount == 0) return 0 */\n      tag_135\n      jumpi\n        /* \"YieldFarming.sol\":3351:3352  0 */\n      0x00\n        /* \"YieldFarming.sol\":3344:3352  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_134)\n        /* \"YieldFarming.sol\":3322:3352  if (user.amount == 0) return 0 */\n    tag_135:\n        /* \"YieldFarming.sol\":3365:3384  uint256 timeElapsed */\n      0x00\n        /* \"YieldFarming.sol\":3405:3409  user */\n      dup2\n        /* \"YieldFarming.sol\":3405:3421  user.lastUpdated */\n      0x40\n      add\n      mload\n        /* \"YieldFarming.sol\":3387:3402  block.timestamp */\n      timestamp\n        /* \"YieldFarming.sol\":3387:3421  block.timestamp - user.lastUpdated */\n      tag_136\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_136:\n        /* \"YieldFarming.sol\":3365:3421  uint256 timeElapsed = block.timestamp - user.lastUpdated */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":3432:3446  uint256 reward */\n      0x00\n        /* \"YieldFarming.sol\":3492:3496  1e18 */\n      0x0de0b6b3a7640000\n        /* \"YieldFarming.sol\":3477:3488  timeElapsed */\n      dup3\n        /* \"YieldFarming.sol\":3464:3474  rewardRate */\n      sload(0x03)\n        /* \"YieldFarming.sol\":3450:3454  user */\n      dup6\n        /* \"YieldFarming.sol\":3450:3461  user.amount */\n      0x00\n      add\n      mload\n        /* \"YieldFarming.sol\":3450:3474  user.amount * rewardRate */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"YieldFarming.sol\":3450:3488  user.amount * rewardRate * timeElapsed */\n      tag_139\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_139:\n        /* \"YieldFarming.sol\":3449:3496  (user.amount * rewardRate * timeElapsed) / 1e18 */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"YieldFarming.sol\":3432:3496  uint256 reward = (user.amount * rewardRate * timeElapsed) / 1e18 */\n      swap1\n      pop\n        /* \"YieldFarming.sol\":3516:3522  reward */\n      dup1\n        /* \"YieldFarming.sol\":3509:3522  return reward */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"YieldFarming.sol\":3190:3530  function _calculateReward(address _user) internal view returns (uint256) {... */\n    tag_134:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_152:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_154:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_155:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_188\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_154\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_156:\n        /* \"#utility.yul\":641:665   */\n      tag_190\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_155\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_191:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_157:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_193\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_156\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_20:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_196\n      tag_152\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":917:1036   */\n    tag_195:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_197\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_157\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_158:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_159:\n        /* \"#utility.yul\":1346:1370   */\n      tag_200\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_158\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1825   */\n    tag_23:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x60\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_202\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup7\n        /* \"#utility.yul\":1583:1654   */\n      tag_159\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1664:1736   */\n      tag_203\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1721:1730   */\n      dup4\n        /* \"#utility.yul\":1717:1735   */\n      add\n        /* \"#utility.yul\":1708:1714   */\n      dup6\n        /* \"#utility.yul\":1664:1736   */\n      tag_159\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1746:1818   */\n      tag_204\n        /* \"#utility.yul\":1814:1816   */\n      0x40\n        /* \"#utility.yul\":1803:1812   */\n      dup4\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"#utility.yul\":1790:1796   */\n      dup5\n        /* \"#utility.yul\":1746:1818   */\n      tag_159\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1383:1825   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1953   */\n    tag_160:\n        /* \"#utility.yul\":1904:1928   */\n      tag_206\n        /* \"#utility.yul\":1922:1927   */\n      dup2\n        /* \"#utility.yul\":1904:1928   */\n      tag_158\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1894:1929   */\n      eq\n        /* \"#utility.yul\":1884:1947   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":1943:1944   */\n      0x00\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1933:1945   */\n      revert\n        /* \"#utility.yul\":1884:1947   */\n    tag_207:\n        /* \"#utility.yul\":1831:1953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2098   */\n    tag_161:\n        /* \"#utility.yul\":2005:2010   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup2\n        /* \"#utility.yul\":2030:2050   */\n      calldataload\n        /* \"#utility.yul\":2021:2050   */\n      swap1\n      pop\n        /* \"#utility.yul\":2059:2092   */\n      tag_209\n        /* \"#utility.yul\":2086:2091   */\n      dup2\n        /* \"#utility.yul\":2059:2092   */\n      tag_160\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1959:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2433   */\n    tag_26:\n        /* \"#utility.yul\":2163:2169   */\n      0x00\n        /* \"#utility.yul\":2212:2214   */\n      0x20\n        /* \"#utility.yul\":2200:2209   */\n      dup3\n        /* \"#utility.yul\":2191:2198   */\n      dup5\n        /* \"#utility.yul\":2187:2210   */\n      sub\n        /* \"#utility.yul\":2183:2215   */\n      slt\n        /* \"#utility.yul\":2180:2299   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2218:2297   */\n      tag_212\n      tag_152\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2180:2299   */\n    tag_211:\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2363:2416   */\n      tag_213\n        /* \"#utility.yul\":2408:2415   */\n      dup5\n        /* \"#utility.yul\":2399:2405   */\n      dup3\n        /* \"#utility.yul\":2388:2397   */\n      dup6\n        /* \"#utility.yul\":2384:2406   */\n      add\n        /* \"#utility.yul\":2363:2416   */\n      tag_161\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2353:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2309:2426   */\n      pop\n        /* \"#utility.yul\":2104:2433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2499   */\n    tag_162:\n        /* \"#utility.yul\":2467:2470   */\n      0x00\n        /* \"#utility.yul\":2488:2493   */\n      dup2\n        /* \"#utility.yul\":2481:2493   */\n      swap1\n      pop\n        /* \"#utility.yul\":2439:2499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2505:2647   */\n    tag_163:\n        /* \"#utility.yul\":2555:2564   */\n      0x00\n        /* \"#utility.yul\":2588:2641   */\n      tag_216\n        /* \"#utility.yul\":2606:2640   */\n      tag_217\n        /* \"#utility.yul\":2615:2639   */\n      tag_218\n        /* \"#utility.yul\":2633:2638   */\n      dup5\n        /* \"#utility.yul\":2615:2639   */\n      tag_154\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2606:2640   */\n      tag_162\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2588:2641   */\n      tag_154\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2575:2641   */\n      swap1\n      pop\n        /* \"#utility.yul\":2505:2647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2653:2779   */\n    tag_164:\n        /* \"#utility.yul\":2703:2712   */\n      0x00\n        /* \"#utility.yul\":2736:2773   */\n      tag_220\n        /* \"#utility.yul\":2767:2772   */\n      dup3\n        /* \"#utility.yul\":2736:2773   */\n      tag_163\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2723:2773   */\n      swap1\n      pop\n        /* \"#utility.yul\":2653:2779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:2925   */\n    tag_165:\n        /* \"#utility.yul\":2849:2858   */\n      0x00\n        /* \"#utility.yul\":2882:2919   */\n      tag_222\n        /* \"#utility.yul\":2913:2918   */\n      dup3\n        /* \"#utility.yul\":2882:2919   */\n      tag_164\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2869:2919   */\n      swap1\n      pop\n        /* \"#utility.yul\":2785:2925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3090   */\n    tag_166:\n        /* \"#utility.yul\":3032:3083   */\n      tag_224\n        /* \"#utility.yul\":3077:3082   */\n      dup2\n        /* \"#utility.yul\":3032:3083   */\n      tag_165\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3027:3030   */\n      dup3\n        /* \"#utility.yul\":3020:3084   */\n      mstore\n        /* \"#utility.yul\":2931:3090   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3096:3346   */\n    tag_35:\n        /* \"#utility.yul\":3203:3207   */\n      0x00\n        /* \"#utility.yul\":3241:3243   */\n      0x20\n        /* \"#utility.yul\":3230:3239   */\n      dup3\n        /* \"#utility.yul\":3226:3244   */\n      add\n        /* \"#utility.yul\":3218:3244   */\n      swap1\n      pop\n        /* \"#utility.yul\":3254:3339   */\n      tag_226\n        /* \"#utility.yul\":3336:3337   */\n      0x00\n        /* \"#utility.yul\":3325:3334   */\n      dup4\n        /* \"#utility.yul\":3321:3338   */\n      add\n        /* \"#utility.yul\":3312:3318   */\n      dup5\n        /* \"#utility.yul\":3254:3339   */\n      tag_166\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3096:3346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3574   */\n    tag_39:\n        /* \"#utility.yul\":3445:3449   */\n      0x00\n        /* \"#utility.yul\":3483:3485   */\n      0x20\n        /* \"#utility.yul\":3472:3481   */\n      dup3\n        /* \"#utility.yul\":3468:3486   */\n      add\n        /* \"#utility.yul\":3460:3486   */\n      swap1\n      pop\n        /* \"#utility.yul\":3496:3567   */\n      tag_228\n        /* \"#utility.yul\":3564:3565   */\n      0x00\n        /* \"#utility.yul\":3553:3562   */\n      dup4\n        /* \"#utility.yul\":3549:3566   */\n      add\n        /* \"#utility.yul\":3540:3546   */\n      dup5\n        /* \"#utility.yul\":3496:3567   */\n      tag_159\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3352:3574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3580:3698   */\n    tag_167:\n        /* \"#utility.yul\":3667:3691   */\n      tag_230\n        /* \"#utility.yul\":3685:3690   */\n      dup2\n        /* \"#utility.yul\":3667:3691   */\n      tag_155\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3662:3665   */\n      dup3\n        /* \"#utility.yul\":3655:3692   */\n      mstore\n        /* \"#utility.yul\":3580:3698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3704:3926   */\n    tag_46:\n        /* \"#utility.yul\":3797:3801   */\n      0x00\n        /* \"#utility.yul\":3835:3837   */\n      0x20\n        /* \"#utility.yul\":3824:3833   */\n      dup3\n        /* \"#utility.yul\":3820:3838   */\n      add\n        /* \"#utility.yul\":3812:3838   */\n      swap1\n      pop\n        /* \"#utility.yul\":3848:3919   */\n      tag_232\n        /* \"#utility.yul\":3916:3917   */\n      0x00\n        /* \"#utility.yul\":3905:3914   */\n      dup4\n        /* \"#utility.yul\":3901:3918   */\n      add\n        /* \"#utility.yul\":3892:3898   */\n      dup5\n        /* \"#utility.yul\":3848:3919   */\n      tag_167\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3704:3926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3932:4101   */\n    tag_168:\n        /* \"#utility.yul\":4016:4027   */\n      0x00\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4045:4048   */\n      dup3\n        /* \"#utility.yul\":4038:4057   */\n      mstore\n        /* \"#utility.yul\":4090:4094   */\n      0x20\n        /* \"#utility.yul\":4085:4088   */\n      dup3\n        /* \"#utility.yul\":4081:4095   */\n      add\n        /* \"#utility.yul\":4066:4095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3932:4101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4107:4284   */\n    tag_169:\n        /* \"#utility.yul\":4247:4276   */\n      0x496e73756666696369656e74207374616b65642062616c616e63650000000000\n        /* \"#utility.yul\":4243:4244   */\n      0x00\n        /* \"#utility.yul\":4235:4241   */\n      dup3\n        /* \"#utility.yul\":4231:4245   */\n      add\n        /* \"#utility.yul\":4224:4277   */\n      mstore\n        /* \"#utility.yul\":4107:4284   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4290:4656   */\n    tag_170:\n        /* \"#utility.yul\":4432:4435   */\n      0x00\n        /* \"#utility.yul\":4453:4520   */\n      tag_236\n        /* \"#utility.yul\":4517:4519   */\n      0x1b\n        /* \"#utility.yul\":4512:4515   */\n      dup4\n        /* \"#utility.yul\":4453:4520   */\n      tag_168\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4446:4520   */\n      swap2\n      pop\n        /* \"#utility.yul\":4529:4622   */\n      tag_237\n        /* \"#utility.yul\":4618:4621   */\n      dup3\n        /* \"#utility.yul\":4529:4622   */\n      tag_169\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4647:4649   */\n      0x20\n        /* \"#utility.yul\":4642:4645   */\n      dup3\n        /* \"#utility.yul\":4638:4650   */\n      add\n        /* \"#utility.yul\":4631:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4290:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:5081   */\n    tag_64:\n        /* \"#utility.yul\":4828:4832   */\n      0x00\n        /* \"#utility.yul\":4866:4868   */\n      0x20\n        /* \"#utility.yul\":4855:4864   */\n      dup3\n        /* \"#utility.yul\":4851:4869   */\n      add\n        /* \"#utility.yul\":4843:4869   */\n      swap1\n      pop\n        /* \"#utility.yul\":4915:4924   */\n      dup2\n        /* \"#utility.yul\":4909:4913   */\n      dup2\n        /* \"#utility.yul\":4905:4925   */\n      sub\n        /* \"#utility.yul\":4901:4902   */\n      0x00\n        /* \"#utility.yul\":4890:4899   */\n      dup4\n        /* \"#utility.yul\":4886:4903   */\n      add\n        /* \"#utility.yul\":4879:4926   */\n      mstore\n        /* \"#utility.yul\":4943:5074   */\n      tag_239\n        /* \"#utility.yul\":5069:5073   */\n      dup2\n        /* \"#utility.yul\":4943:5074   */\n      tag_170\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4935:5074   */\n      swap1\n      pop\n        /* \"#utility.yul\":4662:5081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5087:5267   */\n    tag_171:\n        /* \"#utility.yul\":5135:5212   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5132:5133   */\n      0x00\n        /* \"#utility.yul\":5125:5213   */\n      mstore\n        /* \"#utility.yul\":5232:5236   */\n      0x11\n        /* \"#utility.yul\":5229:5230   */\n      0x04\n        /* \"#utility.yul\":5222:5237   */\n      mstore\n        /* \"#utility.yul\":5256:5260   */\n      0x24\n        /* \"#utility.yul\":5253:5254   */\n      0x00\n        /* \"#utility.yul\":5246:5261   */\n      revert\n        /* \"#utility.yul\":5273:5467   */\n    tag_68:\n        /* \"#utility.yul\":5313:5317   */\n      0x00\n        /* \"#utility.yul\":5333:5353   */\n      tag_242\n        /* \"#utility.yul\":5351:5352   */\n      dup3\n        /* \"#utility.yul\":5333:5353   */\n      tag_158\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5328:5353   */\n      swap2\n      pop\n        /* \"#utility.yul\":5367:5387   */\n      tag_243\n        /* \"#utility.yul\":5385:5386   */\n      dup4\n        /* \"#utility.yul\":5367:5387   */\n      tag_158\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5362:5387   */\n      swap3\n      pop\n        /* \"#utility.yul\":5411:5412   */\n      dup3\n        /* \"#utility.yul\":5408:5409   */\n      dup3\n        /* \"#utility.yul\":5404:5413   */\n      sub\n        /* \"#utility.yul\":5396:5413   */\n      swap1\n      pop\n        /* \"#utility.yul\":5435:5436   */\n      dup2\n        /* \"#utility.yul\":5429:5433   */\n      dup2\n        /* \"#utility.yul\":5426:5437   */\n      gt\n        /* \"#utility.yul\":5423:5460   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":5440:5458   */\n      tag_245\n      tag_171\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5423:5460   */\n    tag_244:\n        /* \"#utility.yul\":5273:5467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5473:5805   */\n    tag_71:\n        /* \"#utility.yul\":5594:5598   */\n      0x00\n        /* \"#utility.yul\":5632:5634   */\n      0x40\n        /* \"#utility.yul\":5621:5630   */\n      dup3\n        /* \"#utility.yul\":5617:5635   */\n      add\n        /* \"#utility.yul\":5609:5635   */\n      swap1\n      pop\n        /* \"#utility.yul\":5645:5716   */\n      tag_247\n        /* \"#utility.yul\":5713:5714   */\n      0x00\n        /* \"#utility.yul\":5702:5711   */\n      dup4\n        /* \"#utility.yul\":5698:5715   */\n      add\n        /* \"#utility.yul\":5689:5695   */\n      dup6\n        /* \"#utility.yul\":5645:5716   */\n      tag_167\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5726:5798   */\n      tag_248\n        /* \"#utility.yul\":5794:5796   */\n      0x20\n        /* \"#utility.yul\":5783:5792   */\n      dup4\n        /* \"#utility.yul\":5779:5797   */\n      add\n        /* \"#utility.yul\":5770:5776   */\n      dup5\n        /* \"#utility.yul\":5726:5798   */\n      tag_159\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5473:5805   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5811:5901   */\n    tag_172:\n        /* \"#utility.yul\":5845:5852   */\n      0x00\n        /* \"#utility.yul\":5888:5893   */\n      dup2\n        /* \"#utility.yul\":5881:5894   */\n      iszero\n        /* \"#utility.yul\":5874:5895   */\n      iszero\n        /* \"#utility.yul\":5863:5895   */\n      swap1\n      pop\n        /* \"#utility.yul\":5811:5901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5907:6023   */\n    tag_173:\n        /* \"#utility.yul\":5977:5998   */\n      tag_251\n        /* \"#utility.yul\":5992:5997   */\n      dup2\n        /* \"#utility.yul\":5977:5998   */\n      tag_172\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5967:5999   */\n      eq\n        /* \"#utility.yul\":5957:6017   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":6013:6014   */\n      0x00\n        /* \"#utility.yul\":6010:6011   */\n      0x00\n        /* \"#utility.yul\":6003:6015   */\n      revert\n        /* \"#utility.yul\":5957:6017   */\n    tag_252:\n        /* \"#utility.yul\":5907:6023   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6029:6166   */\n    tag_174:\n        /* \"#utility.yul\":6083:6088   */\n      0x00\n        /* \"#utility.yul\":6114:6120   */\n      dup2\n        /* \"#utility.yul\":6108:6121   */\n      mload\n        /* \"#utility.yul\":6099:6121   */\n      swap1\n      pop\n        /* \"#utility.yul\":6130:6160   */\n      tag_254\n        /* \"#utility.yul\":6154:6159   */\n      dup2\n        /* \"#utility.yul\":6130:6160   */\n      tag_173\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6029:6166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6172:6517   */\n    tag_75:\n        /* \"#utility.yul\":6239:6245   */\n      0x00\n        /* \"#utility.yul\":6288:6290   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6267:6274   */\n      dup5\n        /* \"#utility.yul\":6263:6286   */\n      sub\n        /* \"#utility.yul\":6259:6291   */\n      slt\n        /* \"#utility.yul\":6256:6375   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":6294:6373   */\n      tag_257\n      tag_152\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":6256:6375   */\n    tag_256:\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6439:6500   */\n      tag_258\n        /* \"#utility.yul\":6492:6499   */\n      dup5\n        /* \"#utility.yul\":6483:6489   */\n      dup3\n        /* \"#utility.yul\":6472:6481   */\n      dup6\n        /* \"#utility.yul\":6468:6490   */\n      add\n        /* \"#utility.yul\":6439:6500   */\n      tag_174\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":6429:6500   */\n      swap2\n      pop\n        /* \"#utility.yul\":6385:6510   */\n      pop\n        /* \"#utility.yul\":6172:6517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6523:6692   */\n    tag_175:\n        /* \"#utility.yul\":6663:6684   */\n      0x4e6f207265776172647320746f20636c61696d00000000000000000000000000\n        /* \"#utility.yul\":6659:6660   */\n      0x00\n        /* \"#utility.yul\":6651:6657   */\n      dup3\n        /* \"#utility.yul\":6647:6661   */\n      add\n        /* \"#utility.yul\":6640:6685   */\n      mstore\n        /* \"#utility.yul\":6523:6692   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6698:7064   */\n    tag_176:\n        /* \"#utility.yul\":6840:6843   */\n      0x00\n        /* \"#utility.yul\":6861:6928   */\n      tag_261\n        /* \"#utility.yul\":6925:6927   */\n      0x13\n        /* \"#utility.yul\":6920:6923   */\n      dup4\n        /* \"#utility.yul\":6861:6928   */\n      tag_168\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6854:6928   */\n      swap2\n      pop\n        /* \"#utility.yul\":6937:7030   */\n      tag_262\n        /* \"#utility.yul\":7026:7029   */\n      dup3\n        /* \"#utility.yul\":6937:7030   */\n      tag_175\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7055:7057   */\n      0x20\n        /* \"#utility.yul\":7050:7053   */\n      dup3\n        /* \"#utility.yul\":7046:7058   */\n      add\n        /* \"#utility.yul\":7039:7058   */\n      swap1\n      pop\n        /* \"#utility.yul\":6698:7064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7070:7489   */\n    tag_83:\n        /* \"#utility.yul\":7236:7240   */\n      0x00\n        /* \"#utility.yul\":7274:7276   */\n      0x20\n        /* \"#utility.yul\":7263:7272   */\n      dup3\n        /* \"#utility.yul\":7259:7277   */\n      add\n        /* \"#utility.yul\":7251:7277   */\n      swap1\n      pop\n        /* \"#utility.yul\":7323:7332   */\n      dup2\n        /* \"#utility.yul\":7317:7321   */\n      dup2\n        /* \"#utility.yul\":7313:7333   */\n      sub\n        /* \"#utility.yul\":7309:7310   */\n      0x00\n        /* \"#utility.yul\":7298:7307   */\n      dup4\n        /* \"#utility.yul\":7294:7311   */\n      add\n        /* \"#utility.yul\":7287:7334   */\n      mstore\n        /* \"#utility.yul\":7351:7482   */\n      tag_264\n        /* \"#utility.yul\":7477:7481   */\n      dup2\n        /* \"#utility.yul\":7351:7482   */\n      tag_176\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":7343:7482   */\n      swap1\n      pop\n        /* \"#utility.yul\":7070:7489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7495:7686   */\n    tag_85:\n        /* \"#utility.yul\":7535:7538   */\n      0x00\n        /* \"#utility.yul\":7554:7574   */\n      tag_266\n        /* \"#utility.yul\":7572:7573   */\n      dup3\n        /* \"#utility.yul\":7554:7574   */\n      tag_158\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7549:7574   */\n      swap2\n      pop\n        /* \"#utility.yul\":7588:7608   */\n      tag_267\n        /* \"#utility.yul\":7606:7607   */\n      dup4\n        /* \"#utility.yul\":7588:7608   */\n      tag_158\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7583:7608   */\n      swap3\n      pop\n        /* \"#utility.yul\":7631:7632   */\n      dup3\n        /* \"#utility.yul\":7628:7629   */\n      dup3\n        /* \"#utility.yul\":7624:7633   */\n      add\n        /* \"#utility.yul\":7617:7633   */\n      swap1\n      pop\n        /* \"#utility.yul\":7652:7655   */\n      dup1\n        /* \"#utility.yul\":7649:7650   */\n      dup3\n        /* \"#utility.yul\":7646:7656   */\n      gt\n        /* \"#utility.yul\":7643:7679   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":7659:7677   */\n      tag_269\n      tag_171\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7643:7679   */\n    tag_268:\n        /* \"#utility.yul\":7495:7686   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7692:7863   */\n    tag_177:\n        /* \"#utility.yul\":7832:7855   */\n      0x43616e6e6f74207374616b65203020746f6b656e730000000000000000000000\n        /* \"#utility.yul\":7828:7829   */\n      0x00\n        /* \"#utility.yul\":7820:7826   */\n      dup3\n        /* \"#utility.yul\":7816:7830   */\n      add\n        /* \"#utility.yul\":7809:7856   */\n      mstore\n        /* \"#utility.yul\":7692:7863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7869:8235   */\n    tag_178:\n        /* \"#utility.yul\":8011:8014   */\n      0x00\n        /* \"#utility.yul\":8032:8099   */\n      tag_272\n        /* \"#utility.yul\":8096:8098   */\n      0x15\n        /* \"#utility.yul\":8091:8094   */\n      dup4\n        /* \"#utility.yul\":8032:8099   */\n      tag_168\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8025:8099   */\n      swap2\n      pop\n        /* \"#utility.yul\":8108:8201   */\n      tag_273\n        /* \"#utility.yul\":8197:8200   */\n      dup3\n        /* \"#utility.yul\":8108:8201   */\n      tag_177\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8226:8228   */\n      0x20\n        /* \"#utility.yul\":8221:8224   */\n      dup3\n        /* \"#utility.yul\":8217:8229   */\n      add\n        /* \"#utility.yul\":8210:8229   */\n      swap1\n      pop\n        /* \"#utility.yul\":7869:8235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8241:8660   */\n    tag_104:\n        /* \"#utility.yul\":8407:8411   */\n      0x00\n        /* \"#utility.yul\":8445:8447   */\n      0x20\n        /* \"#utility.yul\":8434:8443   */\n      dup3\n        /* \"#utility.yul\":8430:8448   */\n      add\n        /* \"#utility.yul\":8422:8448   */\n      swap1\n      pop\n        /* \"#utility.yul\":8494:8503   */\n      dup2\n        /* \"#utility.yul\":8488:8492   */\n      dup2\n        /* \"#utility.yul\":8484:8504   */\n      sub\n        /* \"#utility.yul\":8480:8481   */\n      0x00\n        /* \"#utility.yul\":8469:8478   */\n      dup4\n        /* \"#utility.yul\":8465:8482   */\n      add\n        /* \"#utility.yul\":8458:8505   */\n      mstore\n        /* \"#utility.yul\":8522:8653   */\n      tag_275\n        /* \"#utility.yul\":8648:8652   */\n      dup2\n        /* \"#utility.yul\":8522:8653   */\n      tag_178\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":8514:8653   */\n      swap1\n      pop\n        /* \"#utility.yul\":8241:8660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8666:9108   */\n    tag_107:\n        /* \"#utility.yul\":8815:8819   */\n      0x00\n        /* \"#utility.yul\":8853:8855   */\n      0x60\n        /* \"#utility.yul\":8842:8851   */\n      dup3\n        /* \"#utility.yul\":8838:8856   */\n      add\n        /* \"#utility.yul\":8830:8856   */\n      swap1\n      pop\n        /* \"#utility.yul\":8866:8937   */\n      tag_277\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8923:8932   */\n      dup4\n        /* \"#utility.yul\":8919:8936   */\n      add\n        /* \"#utility.yul\":8910:8916   */\n      dup7\n        /* \"#utility.yul\":8866:8937   */\n      tag_167\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8947:9019   */\n      tag_278\n        /* \"#utility.yul\":9015:9017   */\n      0x20\n        /* \"#utility.yul\":9004:9013   */\n      dup4\n        /* \"#utility.yul\":9000:9018   */\n      add\n        /* \"#utility.yul\":8991:8997   */\n      dup6\n        /* \"#utility.yul\":8947:9019   */\n      tag_167\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9029:9101   */\n      tag_279\n        /* \"#utility.yul\":9097:9099   */\n      0x40\n        /* \"#utility.yul\":9086:9095   */\n      dup4\n        /* \"#utility.yul\":9082:9100   */\n      add\n        /* \"#utility.yul\":9073:9079   */\n      dup5\n        /* \"#utility.yul\":9029:9101   */\n      tag_159\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8666:9108   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9114:9283   */\n    tag_179:\n        /* \"#utility.yul\":9254:9275   */\n      0x4e6f7468696e6720746f20776974686472617700000000000000000000000000\n        /* \"#utility.yul\":9250:9251   */\n      0x00\n        /* \"#utility.yul\":9242:9248   */\n      dup3\n        /* \"#utility.yul\":9238:9252   */\n      add\n        /* \"#utility.yul\":9231:9276   */\n      mstore\n        /* \"#utility.yul\":9114:9283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9289:9655   */\n    tag_180:\n        /* \"#utility.yul\":9431:9434   */\n      0x00\n        /* \"#utility.yul\":9452:9519   */\n      tag_282\n        /* \"#utility.yul\":9516:9518   */\n      0x13\n        /* \"#utility.yul\":9511:9514   */\n      dup4\n        /* \"#utility.yul\":9452:9519   */\n      tag_168\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9445:9519   */\n      swap2\n      pop\n        /* \"#utility.yul\":9528:9621   */\n      tag_283\n        /* \"#utility.yul\":9617:9620   */\n      dup3\n        /* \"#utility.yul\":9528:9621   */\n      tag_179\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":9646:9648   */\n      0x20\n        /* \"#utility.yul\":9641:9644   */\n      dup3\n        /* \"#utility.yul\":9637:9649   */\n      add\n        /* \"#utility.yul\":9630:9649   */\n      swap1\n      pop\n        /* \"#utility.yul\":9289:9655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9661:10080   */\n    tag_117:\n        /* \"#utility.yul\":9827:9831   */\n      0x00\n        /* \"#utility.yul\":9865:9867   */\n      0x20\n        /* \"#utility.yul\":9854:9863   */\n      dup3\n        /* \"#utility.yul\":9850:9868   */\n      add\n        /* \"#utility.yul\":9842:9868   */\n      swap1\n      pop\n        /* \"#utility.yul\":9914:9923   */\n      dup2\n        /* \"#utility.yul\":9908:9912   */\n      dup2\n        /* \"#utility.yul\":9904:9924   */\n      sub\n        /* \"#utility.yul\":9900:9901   */\n      0x00\n        /* \"#utility.yul\":9889:9898   */\n      dup4\n        /* \"#utility.yul\":9885:9902   */\n      add\n        /* \"#utility.yul\":9878:9925   */\n      mstore\n        /* \"#utility.yul\":9942:10073   */\n      tag_285\n        /* \"#utility.yul\":10068:10072   */\n      dup2\n        /* \"#utility.yul\":9942:10073   */\n      tag_180\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9934:10073   */\n      swap1\n      pop\n        /* \"#utility.yul\":9661:10080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10086:10496   */\n    tag_138:\n        /* \"#utility.yul\":10126:10133   */\n      0x00\n        /* \"#utility.yul\":10149:10169   */\n      tag_287\n        /* \"#utility.yul\":10167:10168   */\n      dup3\n        /* \"#utility.yul\":10149:10169   */\n      tag_158\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":10144:10169   */\n      swap2\n      pop\n        /* \"#utility.yul\":10183:10203   */\n      tag_288\n        /* \"#utility.yul\":10201:10202   */\n      dup4\n        /* \"#utility.yul\":10183:10203   */\n      tag_158\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":10178:10203   */\n      swap3\n      pop\n        /* \"#utility.yul\":10238:10239   */\n      dup3\n        /* \"#utility.yul\":10235:10236   */\n      dup3\n        /* \"#utility.yul\":10231:10240   */\n      mul\n        /* \"#utility.yul\":10260:10290   */\n      tag_289\n        /* \"#utility.yul\":10278:10289   */\n      dup2\n        /* \"#utility.yul\":10260:10290   */\n      tag_158\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10249:10290   */\n      swap2\n      pop\n        /* \"#utility.yul\":10439:10440   */\n      dup3\n        /* \"#utility.yul\":10430:10437   */\n      dup3\n        /* \"#utility.yul\":10426:10441   */\n      div\n        /* \"#utility.yul\":10423:10424   */\n      dup5\n        /* \"#utility.yul\":10420:10442   */\n      eq\n        /* \"#utility.yul\":10400:10401   */\n      dup4\n        /* \"#utility.yul\":10393:10402   */\n      iszero\n        /* \"#utility.yul\":10373:10456   */\n      or\n        /* \"#utility.yul\":10350:10489   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":10469:10487   */\n      tag_291\n      tag_171\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10350:10489   */\n    tag_290:\n        /* \"#utility.yul\":10134:10496   */\n      pop\n        /* \"#utility.yul\":10086:10496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10502:10682   */\n    tag_181:\n        /* \"#utility.yul\":10550:10627   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10547:10548   */\n      0x00\n        /* \"#utility.yul\":10540:10628   */\n      mstore\n        /* \"#utility.yul\":10647:10651   */\n      0x12\n        /* \"#utility.yul\":10644:10645   */\n      0x04\n        /* \"#utility.yul\":10637:10652   */\n      mstore\n        /* \"#utility.yul\":10671:10675   */\n      0x24\n        /* \"#utility.yul\":10668:10669   */\n      0x00\n        /* \"#utility.yul\":10661:10676   */\n      revert\n        /* \"#utility.yul\":10688:10873   */\n    tag_141:\n        /* \"#utility.yul\":10728:10729   */\n      0x00\n        /* \"#utility.yul\":10745:10765   */\n      tag_294\n        /* \"#utility.yul\":10763:10764   */\n      dup3\n        /* \"#utility.yul\":10745:10765   */\n      tag_158\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":10740:10765   */\n      swap2\n      pop\n        /* \"#utility.yul\":10779:10799   */\n      tag_295\n        /* \"#utility.yul\":10797:10798   */\n      dup4\n        /* \"#utility.yul\":10779:10799   */\n      tag_158\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10774:10799   */\n      swap3\n      pop\n        /* \"#utility.yul\":10818:10819   */\n      dup3\n        /* \"#utility.yul\":10808:10843   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":10823:10841   */\n      tag_297\n      tag_181\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10808:10843   */\n    tag_296:\n        /* \"#utility.yul\":10865:10866   */\n      dup3\n        /* \"#utility.yul\":10862:10863   */\n      dup3\n        /* \"#utility.yul\":10858:10867   */\n      div\n        /* \"#utility.yul\":10853:10867   */\n      swap1\n      pop\n        /* \"#utility.yul\":10688:10873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202d7be85f6dedc154607100f4792274285db76b41a88506af7a35be41a547849164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 321,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2223:4",
										"nodeType": "YulBlock",
										"src": "0:2223:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "890:32:4",
													"nodeType": "YulBlock",
													"src": "890:32:4",
													"statements": [
														{
															"nativeSrc": "900:16:4",
															"nodeType": "YulAssignment",
															"src": "900:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:4",
																"nodeType": "YulIdentifier",
																"src": "911:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:4",
														"nodeType": "YulTypedName",
														"src": "872:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:4",
														"nodeType": "YulTypedName",
														"src": "882:7:4",
														"type": ""
													}
												],
												"src": "845:77:4"
											},
											{
												"body": {
													"nativeSrc": "971:79:4",
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:4",
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nativeSrc": "1030:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nativeSrc": "1030:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nativeSrc": "1001:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nativeSrc": "991:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nativeSrc": "984:43:4",
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nativeSrc": "981:63:4",
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:4",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nativeSrc": "1119:80:4",
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nativeSrc": "1129:22:4",
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nativeSrc": "1138:13:4",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nativeSrc": "1160:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nativeSrc": "1160:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:4",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:4",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:4",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nativeSrc": "1316:552:4",
													"nodeType": "YulBlock",
													"src": "1316:552:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:4",
																"nodeType": "YulBlock",
																"src": "1362:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:4"
																			},
																			"nativeSrc": "1364:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:4"
																		},
																		"nativeSrc": "1364:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:4"
																		},
																		"nativeSrc": "1333:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:4"
																},
																"nativeSrc": "1329:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:4"
															},
															"nativeSrc": "1326:119:4",
															"nodeType": "YulIf",
															"src": "1326:119:4"
														},
														{
															"nativeSrc": "1455:128:4",
															"nodeType": "YulBlock",
															"src": "1455:128:4",
															"statements": [
																{
																	"nativeSrc": "1470:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:4"
																				},
																				"nativeSrc": "1541:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:4"
																		},
																		"nativeSrc": "1509:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:4",
															"nodeType": "YulBlock",
															"src": "1593:129:4",
															"statements": [
																{
																	"nativeSrc": "1608:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:4"
																				},
																				"nativeSrc": "1680:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:4"
																		},
																		"nativeSrc": "1648:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:4",
															"nodeType": "YulBlock",
															"src": "1732:129:4",
															"statements": [
																{
																	"nativeSrc": "1747:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:4"
																				},
																				"nativeSrc": "1819:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:4"
																		},
																		"nativeSrc": "1787:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:4",
														"nodeType": "YulTypedName",
														"src": "1270:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:4",
														"nodeType": "YulTypedName",
														"src": "1281:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:4",
														"nodeType": "YulTypedName",
														"src": "1293:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:4",
														"nodeType": "YulTypedName",
														"src": "1301:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:4",
														"nodeType": "YulTypedName",
														"src": "1309:6:4",
														"type": ""
													}
												],
												"src": "1205:663:4"
											},
											{
												"body": {
													"nativeSrc": "1939:53:4",
													"nodeType": "YulBlock",
													"src": "1939:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:4"
																		},
																		"nativeSrc": "1961:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:4"
																},
																"nativeSrc": "1949:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:4"
															},
															"nativeSrc": "1949:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:4",
														"nodeType": "YulTypedName",
														"src": "1927:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:4",
														"nodeType": "YulTypedName",
														"src": "1934:3:4",
														"type": ""
													}
												],
												"src": "1874:118:4"
											},
											{
												"body": {
													"nativeSrc": "2096:124:4",
													"nodeType": "YulBlock",
													"src": "2096:124:4",
													"statements": [
														{
															"nativeSrc": "2106:26:4",
															"nodeType": "YulAssignment",
															"src": "2106:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:4"
																},
																"nativeSrc": "2114:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:4"
																		},
																		"nativeSrc": "2195:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:4"
																},
																"nativeSrc": "2142:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:4"
															},
															"nativeSrc": "2142:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:4",
														"nodeType": "YulTypedName",
														"src": "2068:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:4",
														"nodeType": "YulTypedName",
														"src": "2080:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:4",
														"nodeType": "YulTypedName",
														"src": "2091:4:4",
														"type": ""
													}
												],
												"src": "1998:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161156438038061156483398181016040528101906100319190610293565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102f2565b60405180910390fd5b6100b18161014160201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060038190555050505061030b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022f82610206565b9050919050565b61023f81610225565b8114610249575f5ffd5b50565b5f8151905061025a81610236565b92915050565b5f819050919050565b61027281610260565b811461027c575f5ffd5b50565b5f8151905061028d81610269565b92915050565b5f5f5f606084860312156102aa576102a9610202565b5b5f6102b78682870161024c565b93505060206102c88682870161024c565b92505060406102d98682870161027f565b9150509250925092565b6102ec81610225565b82525050565b5f6020820190506103055f8301846102e3565b92915050565b61124c806103185f395ff3fe608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c8063817b1cd21161008a578063a694fc3a11610064578063a694fc3a146101c7578063db2e21bc146101e3578063f2fde38b146101ed578063f7c618c114610209576100cd565b8063817b1cd21461016f5780638da5cb5b1461018d5780639ef3a261146101ab576100cd565b806316934fc4146100d15780632e17de7814610103578063372500ab1461011f578063715018a61461012957806372f702f3146101335780637b0a47ee14610151575b5f5ffd5b6100eb60048036038101906100e69190610cf7565b610227565b6040516100fa93929190610d3a565b60405180910390f35b61011d60048036038101906101189190610d99565b61024d565b005b6101276103fc565b005b610131610597565b005b61013b6105aa565b6040516101489190610e1f565b60405180910390f35b6101596105cf565b6040516101669190610e38565b60405180910390f35b6101776105d5565b6040516101849190610e38565b60405180910390f35b6101956105db565b6040516101a29190610e60565b60405180910390f35b6101c560048036038101906101c09190610d99565b610602565b005b6101e160048036038101906101dc9190610d99565b610614565b005b6101eb6107bc565b005b61020760048036038101906102029190610cf7565b610954565b005b6102116109d8565b60405161021e9190610e1f565b60405180910390f35b6005602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f015410156102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90610ed3565b60405180910390fd5b6102dc336109fd565b81815f015f8282546102ee9190610f1e565b925050819055508160045f8282546103069190610f1e565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610369929190610f51565b6020604051808303815f875af1158015610385573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a99190610fad565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75836040516103f09190610e38565b60405180910390a25050565b610405336109fd565b5f61040f33610a7d565b90505f8111610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90611022565b60405180910390fd5b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8282546104a29190611040565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610505929190610f51565b6020604051808303815f875af1158015610521573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105459190610fad565b503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161058c9190610e38565b60405180910390a250565b61059f610b4a565b6105a85f610bd1565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60045481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61060a610b4a565b8060038190555050565b5f8111610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d906110bd565b60405180910390fd5b61065f336109fd565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106bd939291906110db565b6020604051808303815f875af11580156106d9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fd9190610fad565b508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f82825461074c9190611040565b925050819055508060045f8282546107649190611040565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516107b19190610e38565b60405180910390a250565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015490505f8111610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c9061115a565b60405180910390fd5b5f825f01819055508060045f82825461085e9190610f1e565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108c1929190610f51565b6020604051808303815f875af11580156108dd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109019190610fad565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516109489190610e38565b60405180910390a25050565b61095c610b4a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109c39190610e60565b60405180910390fd5b6109d581610bd1565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541115610a70575f610a5283610a7d565b905080826001015f828254610a679190611040565b92505081905550505b4281600201819055505050565b5f5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f015103610af9575f915050610b45565b5f816040015142610b0a9190610f1e565b90505f670de0b6b3a764000082600354855f0151610b289190611178565b610b329190611178565b610b3c91906111e6565b90508093505050505b919050565b610b52610c92565b73ffffffffffffffffffffffffffffffffffffffff16610b706105db565b73ffffffffffffffffffffffffffffffffffffffff1614610bcf57610b93610c92565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bc69190610e60565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cc682610c9d565b9050919050565b610cd681610cbc565b8114610ce0575f5ffd5b50565b5f81359050610cf181610ccd565b92915050565b5f60208284031215610d0c57610d0b610c99565b5b5f610d1984828501610ce3565b91505092915050565b5f819050919050565b610d3481610d22565b82525050565b5f606082019050610d4d5f830186610d2b565b610d5a6020830185610d2b565b610d676040830184610d2b565b949350505050565b610d7881610d22565b8114610d82575f5ffd5b50565b5f81359050610d9381610d6f565b92915050565b5f60208284031215610dae57610dad610c99565b5b5f610dbb84828501610d85565b91505092915050565b5f819050919050565b5f610de7610de2610ddd84610c9d565b610dc4565b610c9d565b9050919050565b5f610df882610dcd565b9050919050565b5f610e0982610dee565b9050919050565b610e1981610dff565b82525050565b5f602082019050610e325f830184610e10565b92915050565b5f602082019050610e4b5f830184610d2b565b92915050565b610e5a81610cbc565b82525050565b5f602082019050610e735f830184610e51565b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f610ebd601b83610e79565b9150610ec882610e89565b602082019050919050565b5f6020820190508181035f830152610eea81610eb1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f2882610d22565b9150610f3383610d22565b9250828203905081811115610f4b57610f4a610ef1565b5b92915050565b5f604082019050610f645f830185610e51565b610f716020830184610d2b565b9392505050565b5f8115159050919050565b610f8c81610f78565b8114610f96575f5ffd5b50565b5f81519050610fa781610f83565b92915050565b5f60208284031215610fc257610fc1610c99565b5b5f610fcf84828501610f99565b91505092915050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f61100c601383610e79565b915061101782610fd8565b602082019050919050565b5f6020820190508181035f83015261103981611000565b9050919050565b5f61104a82610d22565b915061105583610d22565b925082820190508082111561106d5761106c610ef1565b5b92915050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f6110a7601583610e79565b91506110b282611073565b602082019050919050565b5f6020820190508181035f8301526110d48161109b565b9050919050565b5f6060820190506110ee5f830186610e51565b6110fb6020830185610e51565b6111086040830184610d2b565b949350505050565b7f4e6f7468696e6720746f207769746864726177000000000000000000000000005f82015250565b5f611144601383610e79565b915061114f82611110565b602082019050919050565b5f6020820190508181035f83015261117181611138565b9050919050565b5f61118282610d22565b915061118d83610d22565b925082820261119b81610d22565b915082820484148315176111b2576111b1610ef1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6111f082610d22565b91506111fb83610d22565b92508261120b5761120a6111b9565b5b82820490509291505056fea26469706673582212202d7be85f6dedc154607100f4792274285db76b41a88506af7a35be41a547849164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1564 CODESIZE SUB DUP1 PUSH2 0x1564 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x141 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x30B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22F DUP3 PUSH2 0x206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x225 JUMP JUMPDEST DUP2 EQ PUSH2 0x249 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A DUP2 PUSH2 0x236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 EQ PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28D DUP2 PUSH2 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA JUMPI PUSH2 0x2A9 PUSH2 0x202 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B7 DUP7 DUP3 DUP8 ADD PUSH2 0x24C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2C8 DUP7 DUP3 DUP8 ADD PUSH2 0x24C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D9 DUP7 DUP3 DUP8 ADD PUSH2 0x27F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x225 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x305 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124C DUP1 PUSH2 0x318 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x209 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x1AB JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x151 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x597 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0x7BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DC CALLER PUSH2 0x9FD JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP3 SWAP2 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x385 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x405 CALLER PUSH2 0x9FD JUMP JUMPDEST PUSH0 PUSH2 0x40F CALLER PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44A SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP3 SWAP2 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x5A8 PUSH0 PUSH2 0xBD1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x60A PUSH2 0xB4A JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65F CALLER PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP3 SWAP2 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x901 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x95C PUSH2 0xB4A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0xBD1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xA70 JUMPI PUSH0 PUSH2 0xA52 DUP4 PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SUB PUSH2 0xAF9 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xB45 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x3 SLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB52 PUSH2 0xC92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB70 PUSH2 0x5DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCF JUMPI PUSH2 0xB93 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC6 DUP3 PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD6 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP2 EQ PUSH2 0xCE0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF1 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0C JUMPI PUSH2 0xD0B PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD19 DUP5 DUP3 DUP6 ADD PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD34 DUP2 PUSH2 0xD22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD4D PUSH0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xD5A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xD67 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xD78 DUP2 PUSH2 0xD22 JUMP JUMPDEST DUP2 EQ PUSH2 0xD82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD93 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH2 0xDAD PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBB DUP5 DUP3 DUP6 ADD PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE7 PUSH2 0xDE2 PUSH2 0xDDD DUP5 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF8 DUP3 PUSH2 0xDCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE09 DUP3 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE19 DUP2 PUSH2 0xDFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE32 PUSH0 DUP4 ADD DUP5 PUSH2 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH0 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE73 PUSH0 DUP4 ADD DUP5 PUSH2 0xE51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEBD PUSH1 0x1B DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC8 DUP3 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEEA DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF28 DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0xF33 DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF4B JUMPI PUSH2 0xF4A PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF64 PUSH0 DUP4 ADD DUP6 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xF71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0xF78 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFA7 DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH2 0xFC1 PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFCF DUP5 DUP3 DUP6 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x100C PUSH1 0x13 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1039 DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A7 PUSH1 0x15 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B2 DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D4 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10EE PUSH0 DUP4 ADD DUP7 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x10FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x1108 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1144 PUSH1 0x13 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x114F DUP3 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1171 DUP2 PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1182 DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0x118D DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x119B DUP2 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11B2 JUMPI PUSH2 0x11B1 PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11F0 DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FB DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH28 0xE85F6DEDC154607100F4792274285DB76B41A88506AF7A35BE41A547 DUP5 SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "370:3760:3:-:0;;;1153:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1273:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1318:13:3::1;1296:12;;:36;;;;;;;;;;;;;;;;;;1364:12;1343:11;;:34;;;;;;;;;;;;;;;;;;1401:11;1388:10;:24;;;;1153:311:::0;;;370:3760;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;370:3760:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateReward_562": {
									"entryPoint": 2685,
									"id": 562,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOwner_84": {
									"entryPoint": 2890,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 3218,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3025,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateReward_517": {
									"entryPoint": 2557,
									"id": 517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimRewards_478": {
									"entryPoint": 1020,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyWithdraw_624": {
									"entryPoint": 1980,
									"id": 624,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1499,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1431,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardRate_269": {
									"entryPoint": 1487,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_267": {
									"entryPoint": 2520,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_380": {
									"entryPoint": 1556,
									"id": 380,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_283": {
									"entryPoint": 551,
									"id": 283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_264": {
									"entryPoint": 1450,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_271": {
									"entryPoint": 1493,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2388,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_432": {
									"entryPoint": 589,
									"id": 432,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardRate_575": {
									"entryPoint": 1538,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3386,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d": {
									"entryPoint": 4056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2": {
									"entryPoint": 3721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b": {
									"entryPoint": 4211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10876:4",
										"nodeType": "YulBlock",
										"src": "0:10876:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "907:263:4",
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:4",
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nativeSrc": "955:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nativeSrc": "955:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nativeSrc": "924:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nativeSrc": "920:32:4",
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nativeSrc": "917:119:4",
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nativeSrc": "1046:117:4",
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nativeSrc": "1061:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nativeSrc": "1100:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:4",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:4",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:4",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nativeSrc": "1221:32:4",
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nativeSrc": "1231:16:4",
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:4",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:4",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:4",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nativeSrc": "1324:53:4",
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nativeSrc": "1346:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nativeSrc": "1334:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nativeSrc": "1334:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:4",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:4",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nativeSrc": "1537:288:4",
													"nodeType": "YulBlock",
													"src": "1537:288:4",
													"statements": [
														{
															"nativeSrc": "1547:26:4",
															"nodeType": "YulAssignment",
															"src": "1547:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:4"
																},
																"nativeSrc": "1555:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:4"
																		},
																		"nativeSrc": "1636:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:4"
																},
																"nativeSrc": "1583:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:4"
															},
															"nativeSrc": "1583:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1708:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1721:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1721:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1732:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1732:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1717:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:4"
																		},
																		"nativeSrc": "1717:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1664:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1664:43:4"
																},
																"nativeSrc": "1664:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1664:72:4"
															},
															"nativeSrc": "1664:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1664:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1790:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1803:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1814:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1814:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1799:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:4"
																		},
																		"nativeSrc": "1799:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1746:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1746:43:4"
																},
																"nativeSrc": "1746:72:4",
																"nodeType": "YulFunctionCall",
																"src": "1746:72:4"
															},
															"nativeSrc": "1746:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "1746:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1493:9:4",
														"nodeType": "YulTypedName",
														"src": "1493:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1505:6:4",
														"nodeType": "YulTypedName",
														"src": "1505:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1513:6:4",
														"nodeType": "YulTypedName",
														"src": "1513:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:4",
														"nodeType": "YulTypedName",
														"src": "1521:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:4",
														"nodeType": "YulTypedName",
														"src": "1532:4:4",
														"type": ""
													}
												],
												"src": "1383:442:4"
											},
											{
												"body": {
													"nativeSrc": "1874:79:4",
													"nodeType": "YulBlock",
													"src": "1874:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1931:16:4",
																"nodeType": "YulBlock",
																"src": "1931:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1940:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1943:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1933:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:4"
																			},
																			"nativeSrc": "1933:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1933:12:4"
																		},
																		"nativeSrc": "1933:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1933:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1897:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1897:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1922:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1922:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1904:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1904:17:4"
																				},
																				"nativeSrc": "1904:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1904:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1894:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1894:2:4"
																		},
																		"nativeSrc": "1894:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1887:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:4"
																},
																"nativeSrc": "1887:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1887:43:4"
															},
															"nativeSrc": "1884:63:4",
															"nodeType": "YulIf",
															"src": "1884:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1831:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1867:5:4",
														"nodeType": "YulTypedName",
														"src": "1867:5:4",
														"type": ""
													}
												],
												"src": "1831:122:4"
											},
											{
												"body": {
													"nativeSrc": "2011:87:4",
													"nodeType": "YulBlock",
													"src": "2011:87:4",
													"statements": [
														{
															"nativeSrc": "2021:29:4",
															"nodeType": "YulAssignment",
															"src": "2021:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2043:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2043:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2030:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2030:12:4"
																},
																"nativeSrc": "2030:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2030:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2021:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2086:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2086:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2059:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2059:26:4"
																},
																"nativeSrc": "2059:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2059:33:4"
															},
															"nativeSrc": "2059:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2059:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1959:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1989:6:4",
														"nodeType": "YulTypedName",
														"src": "1989:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1997:3:4",
														"nodeType": "YulTypedName",
														"src": "1997:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2005:5:4",
														"nodeType": "YulTypedName",
														"src": "2005:5:4",
														"type": ""
													}
												],
												"src": "1959:139:4"
											},
											{
												"body": {
													"nativeSrc": "2170:263:4",
													"nodeType": "YulBlock",
													"src": "2170:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2216:83:4",
																"nodeType": "YulBlock",
																"src": "2216:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2218:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2218:77:4"
																			},
																			"nativeSrc": "2218:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2218:79:4"
																		},
																		"nativeSrc": "2218:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2218:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2191:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2191:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2200:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2200:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2187:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2187:3:4"
																		},
																		"nativeSrc": "2187:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2187:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2212:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2212:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2183:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2183:3:4"
																},
																"nativeSrc": "2183:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2183:32:4"
															},
															"nativeSrc": "2180:119:4",
															"nodeType": "YulIf",
															"src": "2180:119:4"
														},
														{
															"nativeSrc": "2309:117:4",
															"nodeType": "YulBlock",
															"src": "2309:117:4",
															"statements": [
																{
																	"nativeSrc": "2324:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2324:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2338:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2328:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2328:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2353:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2353:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2388:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2399:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2399:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2384:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2384:3:4"
																				},
																				"nativeSrc": "2384:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2384:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2408:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2408:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2363:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2363:20:4"
																		},
																		"nativeSrc": "2363:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2363:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2353:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2353:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2104:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2140:9:4",
														"nodeType": "YulTypedName",
														"src": "2140:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2151:7:4",
														"nodeType": "YulTypedName",
														"src": "2151:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2163:6:4",
														"nodeType": "YulTypedName",
														"src": "2163:6:4",
														"type": ""
													}
												],
												"src": "2104:329:4"
											},
											{
												"body": {
													"nativeSrc": "2471:28:4",
													"nodeType": "YulBlock",
													"src": "2471:28:4",
													"statements": [
														{
															"nativeSrc": "2481:12:4",
															"nodeType": "YulAssignment",
															"src": "2481:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "2488:5:4",
																"nodeType": "YulIdentifier",
																"src": "2488:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2481:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2439:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2457:5:4",
														"nodeType": "YulTypedName",
														"src": "2457:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2467:3:4",
														"nodeType": "YulTypedName",
														"src": "2467:3:4",
														"type": ""
													}
												],
												"src": "2439:60:4"
											},
											{
												"body": {
													"nativeSrc": "2565:82:4",
													"nodeType": "YulBlock",
													"src": "2565:82:4",
													"statements": [
														{
															"nativeSrc": "2575:66:4",
															"nodeType": "YulAssignment",
															"src": "2575:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2633:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2633:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2615:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2615:17:4"
																				},
																				"nativeSrc": "2615:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2615:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2606:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "2606:8:4"
																		},
																		"nativeSrc": "2606:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2606:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2588:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2588:17:4"
																},
																"nativeSrc": "2588:53:4",
																"nodeType": "YulFunctionCall",
																"src": "2588:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2575:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2575:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2505:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2545:5:4",
														"nodeType": "YulTypedName",
														"src": "2545:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2555:9:4",
														"nodeType": "YulTypedName",
														"src": "2555:9:4",
														"type": ""
													}
												],
												"src": "2505:142:4"
											},
											{
												"body": {
													"nativeSrc": "2713:66:4",
													"nodeType": "YulBlock",
													"src": "2713:66:4",
													"statements": [
														{
															"nativeSrc": "2723:50:4",
															"nodeType": "YulAssignment",
															"src": "2723:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2767:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2767:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2736:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2736:30:4"
																},
																"nativeSrc": "2736:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2736:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2723:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2723:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2653:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2693:5:4",
														"nodeType": "YulTypedName",
														"src": "2693:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2703:9:4",
														"nodeType": "YulTypedName",
														"src": "2703:9:4",
														"type": ""
													}
												],
												"src": "2653:126:4"
											},
											{
												"body": {
													"nativeSrc": "2859:66:4",
													"nodeType": "YulBlock",
													"src": "2859:66:4",
													"statements": [
														{
															"nativeSrc": "2869:50:4",
															"nodeType": "YulAssignment",
															"src": "2869:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2913:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2913:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2882:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2882:30:4"
																},
																"nativeSrc": "2882:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2882:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2869:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2869:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "2785:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2839:5:4",
														"nodeType": "YulTypedName",
														"src": "2839:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2849:9:4",
														"nodeType": "YulTypedName",
														"src": "2849:9:4",
														"type": ""
													}
												],
												"src": "2785:140:4"
											},
											{
												"body": {
													"nativeSrc": "3010:80:4",
													"nodeType": "YulBlock",
													"src": "3010:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3027:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3027:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3077:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3077:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "3032:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "3032:44:4"
																		},
																		"nativeSrc": "3032:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3020:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3020:6:4"
																},
																"nativeSrc": "3020:64:4",
																"nodeType": "YulFunctionCall",
																"src": "3020:64:4"
															},
															"nativeSrc": "3020:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "3020:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "2931:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2998:5:4",
														"nodeType": "YulTypedName",
														"src": "2998:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3005:3:4",
														"nodeType": "YulTypedName",
														"src": "3005:3:4",
														"type": ""
													}
												],
												"src": "2931:159:4"
											},
											{
												"body": {
													"nativeSrc": "3208:138:4",
													"nodeType": "YulBlock",
													"src": "3208:138:4",
													"statements": [
														{
															"nativeSrc": "3218:26:4",
															"nodeType": "YulAssignment",
															"src": "3218:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3230:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3241:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3241:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3226:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:4"
																},
																"nativeSrc": "3226:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3226:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3218:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3218:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3312:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3312:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3325:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3325:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3336:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3336:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3321:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3321:3:4"
																		},
																		"nativeSrc": "3321:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3321:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "3254:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "3254:57:4"
																},
																"nativeSrc": "3254:85:4",
																"nodeType": "YulFunctionCall",
																"src": "3254:85:4"
															},
															"nativeSrc": "3254:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "3254:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "3096:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3180:9:4",
														"nodeType": "YulTypedName",
														"src": "3180:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3192:6:4",
														"nodeType": "YulTypedName",
														"src": "3192:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3203:4:4",
														"nodeType": "YulTypedName",
														"src": "3203:4:4",
														"type": ""
													}
												],
												"src": "3096:250:4"
											},
											{
												"body": {
													"nativeSrc": "3450:124:4",
													"nodeType": "YulBlock",
													"src": "3450:124:4",
													"statements": [
														{
															"nativeSrc": "3460:26:4",
															"nodeType": "YulAssignment",
															"src": "3460:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3472:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3472:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3483:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3483:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3468:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3468:3:4"
																},
																"nativeSrc": "3468:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3468:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3460:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3460:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3540:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3540:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3553:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3553:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3564:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3564:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3549:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:4"
																		},
																		"nativeSrc": "3549:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3496:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3496:43:4"
																},
																"nativeSrc": "3496:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3496:71:4"
															},
															"nativeSrc": "3496:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3496:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3352:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3422:9:4",
														"nodeType": "YulTypedName",
														"src": "3422:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3434:6:4",
														"nodeType": "YulTypedName",
														"src": "3434:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3445:4:4",
														"nodeType": "YulTypedName",
														"src": "3445:4:4",
														"type": ""
													}
												],
												"src": "3352:222:4"
											},
											{
												"body": {
													"nativeSrc": "3645:53:4",
													"nodeType": "YulBlock",
													"src": "3645:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3662:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3662:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3685:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3685:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3667:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "3667:17:4"
																		},
																		"nativeSrc": "3667:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3655:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:4"
																},
																"nativeSrc": "3655:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3655:37:4"
															},
															"nativeSrc": "3655:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3655:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3580:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3633:5:4",
														"nodeType": "YulTypedName",
														"src": "3633:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3640:3:4",
														"nodeType": "YulTypedName",
														"src": "3640:3:4",
														"type": ""
													}
												],
												"src": "3580:118:4"
											},
											{
												"body": {
													"nativeSrc": "3802:124:4",
													"nodeType": "YulBlock",
													"src": "3802:124:4",
													"statements": [
														{
															"nativeSrc": "3812:26:4",
															"nodeType": "YulAssignment",
															"src": "3812:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3824:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3824:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3835:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3835:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3820:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3820:3:4"
																},
																"nativeSrc": "3820:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3820:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3812:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3812:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3892:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3892:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3905:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3916:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3916:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3901:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:4"
																		},
																		"nativeSrc": "3901:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3901:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3848:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3848:43:4"
																},
																"nativeSrc": "3848:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3848:71:4"
															},
															"nativeSrc": "3848:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3848:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3704:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3774:9:4",
														"nodeType": "YulTypedName",
														"src": "3774:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3786:6:4",
														"nodeType": "YulTypedName",
														"src": "3786:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3797:4:4",
														"nodeType": "YulTypedName",
														"src": "3797:4:4",
														"type": ""
													}
												],
												"src": "3704:222:4"
											},
											{
												"body": {
													"nativeSrc": "4028:73:4",
													"nodeType": "YulBlock",
													"src": "4028:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4045:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4045:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4050:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4050:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4038:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:4"
																},
																"nativeSrc": "4038:19:4",
																"nodeType": "YulFunctionCall",
																"src": "4038:19:4"
															},
															"nativeSrc": "4038:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "4038:19:4"
														},
														{
															"nativeSrc": "4066:29:4",
															"nodeType": "YulAssignment",
															"src": "4066:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4085:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4085:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4090:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4090:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4081:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:4"
																},
																"nativeSrc": "4081:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4081:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4066:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "4066:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3932:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4000:3:4",
														"nodeType": "YulTypedName",
														"src": "4000:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4005:6:4",
														"nodeType": "YulTypedName",
														"src": "4005:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4016:11:4",
														"nodeType": "YulTypedName",
														"src": "4016:11:4",
														"type": ""
													}
												],
												"src": "3932:169:4"
											},
											{
												"body": {
													"nativeSrc": "4213:71:4",
													"nodeType": "YulBlock",
													"src": "4213:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4235:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4235:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4243:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4243:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4231:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4231:3:4"
																		},
																		"nativeSrc": "4231:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4231:14:4"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "4247:29:4",
																		"nodeType": "YulLiteral",
																		"src": "4247:29:4",
																		"type": "",
																		"value": "Insufficient staked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4224:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4224:6:4"
																},
																"nativeSrc": "4224:53:4",
																"nodeType": "YulFunctionCall",
																"src": "4224:53:4"
															},
															"nativeSrc": "4224:53:4",
															"nodeType": "YulExpressionStatement",
															"src": "4224:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
												"nativeSrc": "4107:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4205:6:4",
														"nodeType": "YulTypedName",
														"src": "4205:6:4",
														"type": ""
													}
												],
												"src": "4107:177:4"
											},
											{
												"body": {
													"nativeSrc": "4436:220:4",
													"nodeType": "YulBlock",
													"src": "4436:220:4",
													"statements": [
														{
															"nativeSrc": "4446:74:4",
															"nodeType": "YulAssignment",
															"src": "4446:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4512:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4512:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4517:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4453:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4453:58:4"
																},
																"nativeSrc": "4453:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4453:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4446:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4618:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4618:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																	"nativeSrc": "4529:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4529:88:4"
																},
																"nativeSrc": "4529:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4529:93:4"
															},
															"nativeSrc": "4529:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4529:93:4"
														},
														{
															"nativeSrc": "4631:19:4",
															"nodeType": "YulAssignment",
															"src": "4631:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4642:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4642:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4647:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4647:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:4"
																},
																"nativeSrc": "4638:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4638:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4631:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4631:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4290:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4424:3:4",
														"nodeType": "YulTypedName",
														"src": "4424:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4432:3:4",
														"nodeType": "YulTypedName",
														"src": "4432:3:4",
														"type": ""
													}
												],
												"src": "4290:366:4"
											},
											{
												"body": {
													"nativeSrc": "4833:248:4",
													"nodeType": "YulBlock",
													"src": "4833:248:4",
													"statements": [
														{
															"nativeSrc": "4843:26:4",
															"nodeType": "YulAssignment",
															"src": "4843:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4855:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4855:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4866:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4866:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4851:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4851:3:4"
																},
																"nativeSrc": "4851:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4851:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4843:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4843:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4890:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4890:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4901:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4901:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4886:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4886:3:4"
																		},
																		"nativeSrc": "4886:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4886:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4909:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4909:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4915:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4915:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4905:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4905:3:4"
																		},
																		"nativeSrc": "4905:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4905:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4879:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4879:6:4"
																},
																"nativeSrc": "4879:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4879:47:4"
															},
															"nativeSrc": "4879:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4879:47:4"
														},
														{
															"nativeSrc": "4935:139:4",
															"nodeType": "YulAssignment",
															"src": "4935:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5069:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5069:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4943:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4943:124:4"
																},
																"nativeSrc": "4943:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4943:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4935:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4935:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4662:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4813:9:4",
														"nodeType": "YulTypedName",
														"src": "4813:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4828:4:4",
														"nodeType": "YulTypedName",
														"src": "4828:4:4",
														"type": ""
													}
												],
												"src": "4662:419:4"
											},
											{
												"body": {
													"nativeSrc": "5115:152:4",
													"nodeType": "YulBlock",
													"src": "5115:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5132:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5132:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5135:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5135:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5125:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:4"
																},
																"nativeSrc": "5125:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5125:88:4"
															},
															"nativeSrc": "5125:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5125:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5229:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5229:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5232:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5232:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5222:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5222:6:4"
																},
																"nativeSrc": "5222:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5222:15:4"
															},
															"nativeSrc": "5222:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5222:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5253:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5253:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5256:4:4",
																		"nodeType": "YulLiteral",
																		"src": "5256:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5246:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5246:6:4"
																},
																"nativeSrc": "5246:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5246:15:4"
															},
															"nativeSrc": "5246:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5246:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5087:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5087:180:4"
											},
											{
												"body": {
													"nativeSrc": "5318:149:4",
													"nodeType": "YulBlock",
													"src": "5318:149:4",
													"statements": [
														{
															"nativeSrc": "5328:25:4",
															"nodeType": "YulAssignment",
															"src": "5328:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5351:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5351:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5333:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5333:17:4"
																},
																"nativeSrc": "5333:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5333:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5328:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5328:1:4"
																}
															]
														},
														{
															"nativeSrc": "5362:25:4",
															"nodeType": "YulAssignment",
															"src": "5362:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5385:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5385:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5367:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5367:17:4"
																},
																"nativeSrc": "5367:20:4",
																"nodeType": "YulFunctionCall",
																"src": "5367:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5362:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "5362:1:4"
																}
															]
														},
														{
															"nativeSrc": "5396:17:4",
															"nodeType": "YulAssignment",
															"src": "5396:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5408:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5408:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5411:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5411:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5404:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5404:3:4"
																},
																"nativeSrc": "5404:9:4",
																"nodeType": "YulFunctionCall",
																"src": "5404:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5396:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5396:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5438:22:4",
																"nodeType": "YulBlock",
																"src": "5438:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5440:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "5440:16:4"
																			},
																			"nativeSrc": "5440:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5440:18:4"
																		},
																		"nativeSrc": "5440:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5440:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5429:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5429:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5435:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "5435:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5426:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5426:2:4"
																},
																"nativeSrc": "5426:11:4",
																"nodeType": "YulFunctionCall",
																"src": "5426:11:4"
															},
															"nativeSrc": "5423:37:4",
															"nodeType": "YulIf",
															"src": "5423:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5273:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5304:1:4",
														"nodeType": "YulTypedName",
														"src": "5304:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5307:1:4",
														"nodeType": "YulTypedName",
														"src": "5307:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5313:4:4",
														"nodeType": "YulTypedName",
														"src": "5313:4:4",
														"type": ""
													}
												],
												"src": "5273:194:4"
											},
											{
												"body": {
													"nativeSrc": "5599:206:4",
													"nodeType": "YulBlock",
													"src": "5599:206:4",
													"statements": [
														{
															"nativeSrc": "5609:26:4",
															"nodeType": "YulAssignment",
															"src": "5609:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5621:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5621:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5632:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5632:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5617:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5617:3:4"
																},
																"nativeSrc": "5617:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5617:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5609:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5609:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5689:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5689:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5702:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5702:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5713:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5713:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5698:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:4"
																		},
																		"nativeSrc": "5698:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5698:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5645:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5645:43:4"
																},
																"nativeSrc": "5645:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5645:71:4"
															},
															"nativeSrc": "5645:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5645:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5770:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5783:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5783:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5794:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5794:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5779:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5779:3:4"
																		},
																		"nativeSrc": "5779:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5779:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5726:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5726:43:4"
																},
																"nativeSrc": "5726:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5726:72:4"
															},
															"nativeSrc": "5726:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5726:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5473:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5563:9:4",
														"nodeType": "YulTypedName",
														"src": "5563:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5575:6:4",
														"nodeType": "YulTypedName",
														"src": "5575:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5583:6:4",
														"nodeType": "YulTypedName",
														"src": "5583:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5594:4:4",
														"nodeType": "YulTypedName",
														"src": "5594:4:4",
														"type": ""
													}
												],
												"src": "5473:332:4"
											},
											{
												"body": {
													"nativeSrc": "5853:48:4",
													"nodeType": "YulBlock",
													"src": "5853:48:4",
													"statements": [
														{
															"nativeSrc": "5863:32:4",
															"nodeType": "YulAssignment",
															"src": "5863:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5888:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5888:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5881:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5881:6:4"
																		},
																		"nativeSrc": "5881:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5881:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5874:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5874:6:4"
																},
																"nativeSrc": "5874:21:4",
																"nodeType": "YulFunctionCall",
																"src": "5874:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5863:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "5863:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5811:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5835:5:4",
														"nodeType": "YulTypedName",
														"src": "5835:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5845:7:4",
														"nodeType": "YulTypedName",
														"src": "5845:7:4",
														"type": ""
													}
												],
												"src": "5811:90:4"
											},
											{
												"body": {
													"nativeSrc": "5947:76:4",
													"nodeType": "YulBlock",
													"src": "5947:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6001:16:4",
																"nodeType": "YulBlock",
																"src": "6001:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6010:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6010:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6013:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6013:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6003:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6003:6:4"
																			},
																			"nativeSrc": "6003:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6003:12:4"
																		},
																		"nativeSrc": "6003:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6003:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5970:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5970:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5992:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5992:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5977:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "5977:14:4"
																				},
																				"nativeSrc": "5977:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5977:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5967:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5967:2:4"
																		},
																		"nativeSrc": "5967:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5967:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5960:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:4"
																},
																"nativeSrc": "5960:40:4",
																"nodeType": "YulFunctionCall",
																"src": "5960:40:4"
															},
															"nativeSrc": "5957:60:4",
															"nodeType": "YulIf",
															"src": "5957:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5907:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5940:5:4",
														"nodeType": "YulTypedName",
														"src": "5940:5:4",
														"type": ""
													}
												],
												"src": "5907:116:4"
											},
											{
												"body": {
													"nativeSrc": "6089:77:4",
													"nodeType": "YulBlock",
													"src": "6089:77:4",
													"statements": [
														{
															"nativeSrc": "6099:22:4",
															"nodeType": "YulAssignment",
															"src": "6099:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6114:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6114:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6108:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6108:5:4"
																},
																"nativeSrc": "6108:13:4",
																"nodeType": "YulFunctionCall",
																"src": "6108:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6099:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6099:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6154:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6154:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6130:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "6130:23:4"
																},
																"nativeSrc": "6130:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6130:30:4"
															},
															"nativeSrc": "6130:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6130:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6029:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6067:6:4",
														"nodeType": "YulTypedName",
														"src": "6067:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6075:3:4",
														"nodeType": "YulTypedName",
														"src": "6075:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6083:5:4",
														"nodeType": "YulTypedName",
														"src": "6083:5:4",
														"type": ""
													}
												],
												"src": "6029:137:4"
											},
											{
												"body": {
													"nativeSrc": "6246:271:4",
													"nodeType": "YulBlock",
													"src": "6246:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6292:83:4",
																"nodeType": "YulBlock",
																"src": "6292:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6294:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "6294:77:4"
																			},
																			"nativeSrc": "6294:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6294:79:4"
																		},
																		"nativeSrc": "6294:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6294:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6267:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6267:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6276:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6276:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6263:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6263:3:4"
																		},
																		"nativeSrc": "6263:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6263:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6288:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6288:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6259:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:4"
																},
																"nativeSrc": "6259:32:4",
																"nodeType": "YulFunctionCall",
																"src": "6259:32:4"
															},
															"nativeSrc": "6256:119:4",
															"nodeType": "YulIf",
															"src": "6256:119:4"
														},
														{
															"nativeSrc": "6385:125:4",
															"nodeType": "YulBlock",
															"src": "6385:125:4",
															"statements": [
																{
																	"nativeSrc": "6400:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6400:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6414:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6404:6:4",
																			"nodeType": "YulTypedName",
																			"src": "6404:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6429:71:4",
																	"nodeType": "YulAssignment",
																	"src": "6429:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6472:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6472:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6483:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "6483:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6468:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6468:3:4"
																				},
																				"nativeSrc": "6468:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6468:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6492:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6492:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6439:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "6439:28:4"
																		},
																		"nativeSrc": "6439:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6439:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6429:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6429:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6172:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6216:9:4",
														"nodeType": "YulTypedName",
														"src": "6216:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6227:7:4",
														"nodeType": "YulTypedName",
														"src": "6227:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6239:6:4",
														"nodeType": "YulTypedName",
														"src": "6239:6:4",
														"type": ""
													}
												],
												"src": "6172:345:4"
											},
											{
												"body": {
													"nativeSrc": "6629:63:4",
													"nodeType": "YulBlock",
													"src": "6629:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6651:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6651:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6659:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6659:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6647:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6647:3:4"
																		},
																		"nativeSrc": "6647:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6647:14:4"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "6663:21:4",
																		"nodeType": "YulLiteral",
																		"src": "6663:21:4",
																		"type": "",
																		"value": "No rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6640:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:4"
																},
																"nativeSrc": "6640:45:4",
																"nodeType": "YulFunctionCall",
																"src": "6640:45:4"
															},
															"nativeSrc": "6640:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "6640:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
												"nativeSrc": "6523:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6621:6:4",
														"nodeType": "YulTypedName",
														"src": "6621:6:4",
														"type": ""
													}
												],
												"src": "6523:169:4"
											},
											{
												"body": {
													"nativeSrc": "6844:220:4",
													"nodeType": "YulBlock",
													"src": "6844:220:4",
													"statements": [
														{
															"nativeSrc": "6854:74:4",
															"nodeType": "YulAssignment",
															"src": "6854:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6920:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6920:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6925:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6925:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6861:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6861:58:4"
																},
																"nativeSrc": "6861:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6861:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6854:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6854:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7026:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7026:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																	"nativeSrc": "6937:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6937:88:4"
																},
																"nativeSrc": "6937:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6937:93:4"
															},
															"nativeSrc": "6937:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6937:93:4"
														},
														{
															"nativeSrc": "7039:19:4",
															"nodeType": "YulAssignment",
															"src": "7039:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7050:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7050:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7055:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7055:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7046:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7046:3:4"
																},
																"nativeSrc": "7046:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7046:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7039:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6698:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6832:3:4",
														"nodeType": "YulTypedName",
														"src": "6832:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6840:3:4",
														"nodeType": "YulTypedName",
														"src": "6840:3:4",
														"type": ""
													}
												],
												"src": "6698:366:4"
											},
											{
												"body": {
													"nativeSrc": "7241:248:4",
													"nodeType": "YulBlock",
													"src": "7241:248:4",
													"statements": [
														{
															"nativeSrc": "7251:26:4",
															"nodeType": "YulAssignment",
															"src": "7251:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7263:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7263:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7274:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7274:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7259:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7259:3:4"
																},
																"nativeSrc": "7259:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7259:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7251:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7251:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7298:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7298:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7309:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7309:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7294:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7294:3:4"
																		},
																		"nativeSrc": "7294:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7294:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7317:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7317:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7323:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7323:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7313:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7313:3:4"
																		},
																		"nativeSrc": "7313:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7313:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7287:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7287:6:4"
																},
																"nativeSrc": "7287:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7287:47:4"
															},
															"nativeSrc": "7287:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7287:47:4"
														},
														{
															"nativeSrc": "7343:139:4",
															"nodeType": "YulAssignment",
															"src": "7343:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7477:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7477:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7351:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7351:124:4"
																},
																"nativeSrc": "7351:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7351:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7343:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7343:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7070:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7221:9:4",
														"nodeType": "YulTypedName",
														"src": "7221:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7236:4:4",
														"nodeType": "YulTypedName",
														"src": "7236:4:4",
														"type": ""
													}
												],
												"src": "7070:419:4"
											},
											{
												"body": {
													"nativeSrc": "7539:147:4",
													"nodeType": "YulBlock",
													"src": "7539:147:4",
													"statements": [
														{
															"nativeSrc": "7549:25:4",
															"nodeType": "YulAssignment",
															"src": "7549:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7572:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7572:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7554:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7554:17:4"
																},
																"nativeSrc": "7554:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7554:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7549:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7549:1:4"
																}
															]
														},
														{
															"nativeSrc": "7583:25:4",
															"nodeType": "YulAssignment",
															"src": "7583:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7606:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7606:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7588:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7588:17:4"
																},
																"nativeSrc": "7588:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7588:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7583:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "7583:1:4"
																}
															]
														},
														{
															"nativeSrc": "7617:16:4",
															"nodeType": "YulAssignment",
															"src": "7617:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7628:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7628:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7631:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7631:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7624:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7624:3:4"
																},
																"nativeSrc": "7624:9:4",
																"nodeType": "YulFunctionCall",
																"src": "7624:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7617:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7617:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7657:22:4",
																"nodeType": "YulBlock",
																"src": "7657:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7659:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7659:16:4"
																			},
																			"nativeSrc": "7659:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7659:18:4"
																		},
																		"nativeSrc": "7659:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7659:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7649:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "7649:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7652:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7652:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7646:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7646:2:4"
																},
																"nativeSrc": "7646:10:4",
																"nodeType": "YulFunctionCall",
																"src": "7646:10:4"
															},
															"nativeSrc": "7643:36:4",
															"nodeType": "YulIf",
															"src": "7643:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7495:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7526:1:4",
														"nodeType": "YulTypedName",
														"src": "7526:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7529:1:4",
														"nodeType": "YulTypedName",
														"src": "7529:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7535:3:4",
														"nodeType": "YulTypedName",
														"src": "7535:3:4",
														"type": ""
													}
												],
												"src": "7495:191:4"
											},
											{
												"body": {
													"nativeSrc": "7798:65:4",
													"nodeType": "YulBlock",
													"src": "7798:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7820:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7820:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7828:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7828:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7816:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7816:3:4"
																		},
																		"nativeSrc": "7816:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7816:14:4"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "7832:23:4",
																		"nodeType": "YulLiteral",
																		"src": "7832:23:4",
																		"type": "",
																		"value": "Cannot stake 0 tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7809:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7809:6:4"
																},
																"nativeSrc": "7809:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7809:47:4"
															},
															"nativeSrc": "7809:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7809:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
												"nativeSrc": "7692:171:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7790:6:4",
														"nodeType": "YulTypedName",
														"src": "7790:6:4",
														"type": ""
													}
												],
												"src": "7692:171:4"
											},
											{
												"body": {
													"nativeSrc": "8015:220:4",
													"nodeType": "YulBlock",
													"src": "8015:220:4",
													"statements": [
														{
															"nativeSrc": "8025:74:4",
															"nodeType": "YulAssignment",
															"src": "8025:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8091:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8091:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8096:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8096:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8032:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "8032:58:4"
																},
																"nativeSrc": "8032:67:4",
																"nodeType": "YulFunctionCall",
																"src": "8032:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8025:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8025:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8197:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8197:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																	"nativeSrc": "8108:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "8108:88:4"
																},
																"nativeSrc": "8108:93:4",
																"nodeType": "YulFunctionCall",
																"src": "8108:93:4"
															},
															"nativeSrc": "8108:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "8108:93:4"
														},
														{
															"nativeSrc": "8210:19:4",
															"nodeType": "YulAssignment",
															"src": "8210:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8221:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8221:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8226:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8226:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8217:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8217:3:4"
																},
																"nativeSrc": "8217:12:4",
																"nodeType": "YulFunctionCall",
																"src": "8217:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8210:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8210:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7869:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8003:3:4",
														"nodeType": "YulTypedName",
														"src": "8003:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8011:3:4",
														"nodeType": "YulTypedName",
														"src": "8011:3:4",
														"type": ""
													}
												],
												"src": "7869:366:4"
											},
											{
												"body": {
													"nativeSrc": "8412:248:4",
													"nodeType": "YulBlock",
													"src": "8412:248:4",
													"statements": [
														{
															"nativeSrc": "8422:26:4",
															"nodeType": "YulAssignment",
															"src": "8422:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8434:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8434:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8445:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8445:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8430:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8430:3:4"
																},
																"nativeSrc": "8430:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8430:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8422:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8422:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8469:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8469:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8480:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8480:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8465:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8465:3:4"
																		},
																		"nativeSrc": "8465:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8465:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8488:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "8488:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8494:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8494:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8484:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8484:3:4"
																		},
																		"nativeSrc": "8484:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8484:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8458:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8458:6:4"
																},
																"nativeSrc": "8458:47:4",
																"nodeType": "YulFunctionCall",
																"src": "8458:47:4"
															},
															"nativeSrc": "8458:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "8458:47:4"
														},
														{
															"nativeSrc": "8514:139:4",
															"nodeType": "YulAssignment",
															"src": "8514:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8648:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "8648:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8522:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "8522:124:4"
																},
																"nativeSrc": "8522:131:4",
																"nodeType": "YulFunctionCall",
																"src": "8522:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8514:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8514:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8241:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8392:9:4",
														"nodeType": "YulTypedName",
														"src": "8392:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8407:4:4",
														"nodeType": "YulTypedName",
														"src": "8407:4:4",
														"type": ""
													}
												],
												"src": "8241:419:4"
											},
											{
												"body": {
													"nativeSrc": "8820:288:4",
													"nodeType": "YulBlock",
													"src": "8820:288:4",
													"statements": [
														{
															"nativeSrc": "8830:26:4",
															"nodeType": "YulAssignment",
															"src": "8830:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8842:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "8842:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8853:2:4",
																		"nodeType": "YulLiteral",
																		"src": "8853:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8838:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8838:3:4"
																},
																"nativeSrc": "8838:18:4",
																"nodeType": "YulFunctionCall",
																"src": "8838:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8830:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "8830:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8910:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8910:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8923:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "8923:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8934:1:4",
																				"nodeType": "YulLiteral",
																				"src": "8934:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8919:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8919:3:4"
																		},
																		"nativeSrc": "8919:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8919:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8866:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "8866:43:4"
																},
																"nativeSrc": "8866:71:4",
																"nodeType": "YulFunctionCall",
																"src": "8866:71:4"
															},
															"nativeSrc": "8866:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "8866:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8991:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8991:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9004:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9004:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9015:2:4",
																				"nodeType": "YulLiteral",
																				"src": "9015:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9000:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9000:3:4"
																		},
																		"nativeSrc": "9000:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9000:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8947:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "8947:43:4"
																},
																"nativeSrc": "8947:72:4",
																"nodeType": "YulFunctionCall",
																"src": "8947:72:4"
															},
															"nativeSrc": "8947:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "8947:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9073:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "9073:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9086:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9086:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9097:2:4",
																				"nodeType": "YulLiteral",
																				"src": "9097:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9082:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:4"
																		},
																		"nativeSrc": "9082:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9082:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9029:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "9029:43:4"
																},
																"nativeSrc": "9029:72:4",
																"nodeType": "YulFunctionCall",
																"src": "9029:72:4"
															},
															"nativeSrc": "9029:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "9029:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8666:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8776:9:4",
														"nodeType": "YulTypedName",
														"src": "8776:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8788:6:4",
														"nodeType": "YulTypedName",
														"src": "8788:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8796:6:4",
														"nodeType": "YulTypedName",
														"src": "8796:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8804:6:4",
														"nodeType": "YulTypedName",
														"src": "8804:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8815:4:4",
														"nodeType": "YulTypedName",
														"src": "8815:4:4",
														"type": ""
													}
												],
												"src": "8666:442:4"
											},
											{
												"body": {
													"nativeSrc": "9220:63:4",
													"nodeType": "YulBlock",
													"src": "9220:63:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9242:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9242:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9250:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9250:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9238:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9238:3:4"
																		},
																		"nativeSrc": "9238:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9238:14:4"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "9254:21:4",
																		"nodeType": "YulLiteral",
																		"src": "9254:21:4",
																		"type": "",
																		"value": "Nothing to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9231:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:4"
																},
																"nativeSrc": "9231:45:4",
																"nodeType": "YulFunctionCall",
																"src": "9231:45:4"
															},
															"nativeSrc": "9231:45:4",
															"nodeType": "YulExpressionStatement",
															"src": "9231:45:4"
														}
													]
												},
												"name": "store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
												"nativeSrc": "9114:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9212:6:4",
														"nodeType": "YulTypedName",
														"src": "9212:6:4",
														"type": ""
													}
												],
												"src": "9114:169:4"
											},
											{
												"body": {
													"nativeSrc": "9435:220:4",
													"nodeType": "YulBlock",
													"src": "9435:220:4",
													"statements": [
														{
															"nativeSrc": "9445:74:4",
															"nodeType": "YulAssignment",
															"src": "9445:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9511:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9511:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9516:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9516:2:4",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9452:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "9452:58:4"
																},
																"nativeSrc": "9452:67:4",
																"nodeType": "YulFunctionCall",
																"src": "9452:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9445:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9445:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9617:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9617:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																	"nativeSrc": "9528:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "9528:88:4"
																},
																"nativeSrc": "9528:93:4",
																"nodeType": "YulFunctionCall",
																"src": "9528:93:4"
															},
															"nativeSrc": "9528:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "9528:93:4"
														},
														{
															"nativeSrc": "9630:19:4",
															"nodeType": "YulAssignment",
															"src": "9630:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9641:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "9641:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9646:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9646:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9637:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9637:3:4"
																},
																"nativeSrc": "9637:12:4",
																"nodeType": "YulFunctionCall",
																"src": "9637:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9630:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9630:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9289:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9423:3:4",
														"nodeType": "YulTypedName",
														"src": "9423:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9431:3:4",
														"nodeType": "YulTypedName",
														"src": "9431:3:4",
														"type": ""
													}
												],
												"src": "9289:366:4"
											},
											{
												"body": {
													"nativeSrc": "9832:248:4",
													"nodeType": "YulBlock",
													"src": "9832:248:4",
													"statements": [
														{
															"nativeSrc": "9842:26:4",
															"nodeType": "YulAssignment",
															"src": "9842:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9854:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "9854:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9865:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9865:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9850:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9850:3:4"
																},
																"nativeSrc": "9850:18:4",
																"nodeType": "YulFunctionCall",
																"src": "9850:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9842:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9842:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9889:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9889:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9900:1:4",
																				"nodeType": "YulLiteral",
																				"src": "9900:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9885:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:4"
																		},
																		"nativeSrc": "9885:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9885:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9908:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9908:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9914:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9914:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9904:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9904:3:4"
																		},
																		"nativeSrc": "9904:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9904:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9878:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:4"
																},
																"nativeSrc": "9878:47:4",
																"nodeType": "YulFunctionCall",
																"src": "9878:47:4"
															},
															"nativeSrc": "9878:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "9878:47:4"
														},
														{
															"nativeSrc": "9934:139:4",
															"nodeType": "YulAssignment",
															"src": "9934:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10068:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "10068:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9942:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "9942:124:4"
																},
																"nativeSrc": "9942:131:4",
																"nodeType": "YulFunctionCall",
																"src": "9942:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9934:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9934:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9661:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9812:9:4",
														"nodeType": "YulTypedName",
														"src": "9812:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9827:4:4",
														"nodeType": "YulTypedName",
														"src": "9827:4:4",
														"type": ""
													}
												],
												"src": "9661:419:4"
											},
											{
												"body": {
													"nativeSrc": "10134:362:4",
													"nodeType": "YulBlock",
													"src": "10134:362:4",
													"statements": [
														{
															"nativeSrc": "10144:25:4",
															"nodeType": "YulAssignment",
															"src": "10144:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10167:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10167:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10149:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10149:17:4"
																},
																"nativeSrc": "10149:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10149:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10144:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10144:1:4"
																}
															]
														},
														{
															"nativeSrc": "10178:25:4",
															"nodeType": "YulAssignment",
															"src": "10178:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10201:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10201:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10183:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10183:17:4"
																},
																"nativeSrc": "10183:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10183:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10178:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10178:1:4"
																}
															]
														},
														{
															"nativeSrc": "10212:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "10212:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10235:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10235:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10238:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10238:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10231:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10231:3:4"
																},
																"nativeSrc": "10231:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10231:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10216:11:4",
																	"nodeType": "YulTypedName",
																	"src": "10216:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10249:41:4",
															"nodeType": "YulAssignment",
															"src": "10249:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10278:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "10278:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10260:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10260:17:4"
																},
																"nativeSrc": "10260:30:4",
																"nodeType": "YulFunctionCall",
																"src": "10260:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10249:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "10249:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10467:22:4",
																"nodeType": "YulBlock",
																"src": "10467:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10469:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10469:16:4"
																			},
																			"nativeSrc": "10469:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10469:18:4"
																		},
																		"nativeSrc": "10469:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10469:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10400:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "10400:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10393:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "10393:6:4"
																				},
																				"nativeSrc": "10393:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "10393:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10423:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "10423:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10430:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "10430:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10439:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "10439:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10426:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "10426:3:4"
																						},
																						"nativeSrc": "10426:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "10426:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10420:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "10420:2:4"
																				},
																				"nativeSrc": "10420:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "10420:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10373:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "10373:2:4"
																		},
																		"nativeSrc": "10373:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10373:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10353:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10353:6:4"
																},
																"nativeSrc": "10353:113:4",
																"nodeType": "YulFunctionCall",
																"src": "10353:113:4"
															},
															"nativeSrc": "10350:139:4",
															"nodeType": "YulIf",
															"src": "10350:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10086:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10117:1:4",
														"nodeType": "YulTypedName",
														"src": "10117:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10120:1:4",
														"nodeType": "YulTypedName",
														"src": "10120:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10126:7:4",
														"nodeType": "YulTypedName",
														"src": "10126:7:4",
														"type": ""
													}
												],
												"src": "10086:410:4"
											},
											{
												"body": {
													"nativeSrc": "10530:152:4",
													"nodeType": "YulBlock",
													"src": "10530:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10547:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10547:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10550:77:4",
																		"nodeType": "YulLiteral",
																		"src": "10550:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10540:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10540:6:4"
																},
																"nativeSrc": "10540:88:4",
																"nodeType": "YulFunctionCall",
																"src": "10540:88:4"
															},
															"nativeSrc": "10540:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "10540:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10644:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10644:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10647:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10647:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10637:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10637:6:4"
																},
																"nativeSrc": "10637:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10637:15:4"
															},
															"nativeSrc": "10637:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10637:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10668:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10668:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10671:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10671:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10661:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10661:6:4"
																},
																"nativeSrc": "10661:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10661:15:4"
															},
															"nativeSrc": "10661:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10661:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10502:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "10502:180:4"
											},
											{
												"body": {
													"nativeSrc": "10730:143:4",
													"nodeType": "YulBlock",
													"src": "10730:143:4",
													"statements": [
														{
															"nativeSrc": "10740:25:4",
															"nodeType": "YulAssignment",
															"src": "10740:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10763:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10763:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10745:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10745:17:4"
																},
																"nativeSrc": "10745:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10745:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10740:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10740:1:4"
																}
															]
														},
														{
															"nativeSrc": "10774:25:4",
															"nodeType": "YulAssignment",
															"src": "10774:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10797:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10797:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10779:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "10779:17:4"
																},
																"nativeSrc": "10779:20:4",
																"nodeType": "YulFunctionCall",
																"src": "10779:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10774:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10774:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10821:22:4",
																"nodeType": "YulBlock",
																"src": "10821:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10823:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10823:16:4"
																			},
																			"nativeSrc": "10823:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10823:18:4"
																		},
																		"nativeSrc": "10823:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10823:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10818:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10818:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10811:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10811:6:4"
																},
																"nativeSrc": "10811:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10811:9:4"
															},
															"nativeSrc": "10808:35:4",
															"nodeType": "YulIf",
															"src": "10808:35:4"
														},
														{
															"nativeSrc": "10853:14:4",
															"nodeType": "YulAssignment",
															"src": "10853:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10862:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10862:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10865:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "10865:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10858:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10858:3:4"
																},
																"nativeSrc": "10858:9:4",
																"nodeType": "YulFunctionCall",
																"src": "10858:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10853:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "10853:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10688:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10719:1:4",
														"nodeType": "YulTypedName",
														"src": "10719:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10722:1:4",
														"nodeType": "YulTypedName",
														"src": "10722:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10728:1:4",
														"nodeType": "YulTypedName",
														"src": "10728:1:4",
														"type": ""
													}
												],
												"src": "10688:185:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0 tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cd575f3560e01c8063817b1cd21161008a578063a694fc3a11610064578063a694fc3a146101c7578063db2e21bc146101e3578063f2fde38b146101ed578063f7c618c114610209576100cd565b8063817b1cd21461016f5780638da5cb5b1461018d5780639ef3a261146101ab576100cd565b806316934fc4146100d15780632e17de7814610103578063372500ab1461011f578063715018a61461012957806372f702f3146101335780637b0a47ee14610151575b5f5ffd5b6100eb60048036038101906100e69190610cf7565b610227565b6040516100fa93929190610d3a565b60405180910390f35b61011d60048036038101906101189190610d99565b61024d565b005b6101276103fc565b005b610131610597565b005b61013b6105aa565b6040516101489190610e1f565b60405180910390f35b6101596105cf565b6040516101669190610e38565b60405180910390f35b6101776105d5565b6040516101849190610e38565b60405180910390f35b6101956105db565b6040516101a29190610e60565b60405180910390f35b6101c560048036038101906101c09190610d99565b610602565b005b6101e160048036038101906101dc9190610d99565b610614565b005b6101eb6107bc565b005b61020760048036038101906102029190610cf7565b610954565b005b6102116109d8565b60405161021e9190610e1f565b60405180910390f35b6005602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f015410156102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90610ed3565b60405180910390fd5b6102dc336109fd565b81815f015f8282546102ee9190610f1e565b925050819055508160045f8282546103069190610f1e565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610369929190610f51565b6020604051808303815f875af1158015610385573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103a99190610fad565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75836040516103f09190610e38565b60405180910390a25050565b610405336109fd565b5f61040f33610a7d565b90505f8111610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044a90611022565b60405180910390fd5b8060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8282546104a29190611040565b9250508190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610505929190610f51565b6020604051808303815f875af1158015610521573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105459190610fad565b503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72418260405161058c9190610e38565b60405180910390a250565b61059f610b4a565b6105a85f610bd1565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60045481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61060a610b4a565b8060038190555050565b5f8111610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d906110bd565b60405180910390fd5b61065f336109fd565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016106bd939291906110db565b6020604051808303815f875af11580156106d9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106fd9190610fad565b508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f82825461074c9190611040565b925050819055508060045f8282546107649190611040565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d826040516107b19190610e38565b60405180910390a250565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015490505f8111610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c9061115a565b60405180910390fd5b5f825f01819055508060045f82825461085e9190610f1e565b9250508190555060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108c1929190610f51565b6020604051808303815f875af11580156108dd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109019190610fad565b503373ffffffffffffffffffffffffffffffffffffffff167f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75826040516109489190610e38565b60405180910390a25050565b61095c610b4a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109c39190610e60565b60405180910390fd5b6109d581610bd1565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541115610a70575f610a5283610a7d565b905080826001015f828254610a679190611040565b92505081905550505b4281600201819055505050565b5f5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f815f015103610af9575f915050610b45565b5f816040015142610b0a9190610f1e565b90505f670de0b6b3a764000082600354855f0151610b289190611178565b610b329190611178565b610b3c91906111e6565b90508093505050505b919050565b610b52610c92565b73ffffffffffffffffffffffffffffffffffffffff16610b706105db565b73ffffffffffffffffffffffffffffffffffffffff1614610bcf57610b93610c92565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bc69190610e60565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cc682610c9d565b9050919050565b610cd681610cbc565b8114610ce0575f5ffd5b50565b5f81359050610cf181610ccd565b92915050565b5f60208284031215610d0c57610d0b610c99565b5b5f610d1984828501610ce3565b91505092915050565b5f819050919050565b610d3481610d22565b82525050565b5f606082019050610d4d5f830186610d2b565b610d5a6020830185610d2b565b610d676040830184610d2b565b949350505050565b610d7881610d22565b8114610d82575f5ffd5b50565b5f81359050610d9381610d6f565b92915050565b5f60208284031215610dae57610dad610c99565b5b5f610dbb84828501610d85565b91505092915050565b5f819050919050565b5f610de7610de2610ddd84610c9d565b610dc4565b610c9d565b9050919050565b5f610df882610dcd565b9050919050565b5f610e0982610dee565b9050919050565b610e1981610dff565b82525050565b5f602082019050610e325f830184610e10565b92915050565b5f602082019050610e4b5f830184610d2b565b92915050565b610e5a81610cbc565b82525050565b5f602082019050610e735f830184610e51565b92915050565b5f82825260208201905092915050565b7f496e73756666696369656e74207374616b65642062616c616e636500000000005f82015250565b5f610ebd601b83610e79565b9150610ec882610e89565b602082019050919050565b5f6020820190508181035f830152610eea81610eb1565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f2882610d22565b9150610f3383610d22565b9250828203905081811115610f4b57610f4a610ef1565b5b92915050565b5f604082019050610f645f830185610e51565b610f716020830184610d2b565b9392505050565b5f8115159050919050565b610f8c81610f78565b8114610f96575f5ffd5b50565b5f81519050610fa781610f83565b92915050565b5f60208284031215610fc257610fc1610c99565b5b5f610fcf84828501610f99565b91505092915050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f61100c601383610e79565b915061101782610fd8565b602082019050919050565b5f6020820190508181035f83015261103981611000565b9050919050565b5f61104a82610d22565b915061105583610d22565b925082820190508082111561106d5761106c610ef1565b5b92915050565b7f43616e6e6f74207374616b65203020746f6b656e7300000000000000000000005f82015250565b5f6110a7601583610e79565b91506110b282611073565b602082019050919050565b5f6020820190508181035f8301526110d48161109b565b9050919050565b5f6060820190506110ee5f830186610e51565b6110fb6020830185610e51565b6111086040830184610d2b565b949350505050565b7f4e6f7468696e6720746f207769746864726177000000000000000000000000005f82015250565b5f611144601383610e79565b915061114f82611110565b602082019050919050565b5f6020820190508181035f83015261117181611138565b9050919050565b5f61118282610d22565b915061118d83610d22565b925082820261119b81610d22565b915082820484148315176111b2576111b1610ef1565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6111f082610d22565b91506111fb83610d22565b92508261120b5761120a6111b9565b5b82820490509291505056fea26469706673582212202d7be85f6dedc154607100f4792274285db76b41a88506af7a35be41a547849164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x209 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x9EF3A261 EQ PUSH2 0x1AB JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x151 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x24D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x597 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH2 0x7BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0xE1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CA SWAP1 PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2DC CALLER PUSH2 0x9FD JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x369 SWAP3 SWAP2 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x385 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x405 CALLER PUSH2 0x9FD JUMP JUMPDEST PUSH0 PUSH2 0x40F CALLER PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x453 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44A SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP3 SWAP2 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x521 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x545 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x5A8 PUSH0 PUSH2 0xBD1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x60A PUSH2 0xB4A JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP1 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65F CALLER PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6FD SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP3 PUSH1 0x40 MLOAD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C1 SWAP3 SWAP2 SWAP1 PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x901 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75 DUP3 PUSH1 0x40 MLOAD PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x95C PUSH2 0xB4A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C3 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D5 DUP2 PUSH2 0xBD1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xA70 JUMPI PUSH0 PUSH2 0xA52 DUP4 PUSH2 0xA7D JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0x1040 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD SUB PUSH2 0xAF9 JUMPI PUSH0 SWAP2 POP POP PUSH2 0xB45 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0xB0A SWAP2 SWAP1 PUSH2 0xF1E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x3 SLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xB3C SWAP2 SWAP1 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB52 PUSH2 0xC92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB70 PUSH2 0x5DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBCF JUMPI PUSH2 0xB93 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC6 DUP3 PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD6 DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP2 EQ PUSH2 0xCE0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF1 DUP2 PUSH2 0xCCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0C JUMPI PUSH2 0xD0B PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD19 DUP5 DUP3 DUP6 ADD PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD34 DUP2 PUSH2 0xD22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD4D PUSH0 DUP4 ADD DUP7 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xD5A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xD67 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xD78 DUP2 PUSH2 0xD22 JUMP JUMPDEST DUP2 EQ PUSH2 0xD82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD93 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH2 0xDAD PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDBB DUP5 DUP3 DUP6 ADD PUSH2 0xD85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE7 PUSH2 0xDE2 PUSH2 0xDDD DUP5 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0xC9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDF8 DUP3 PUSH2 0xDCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE09 DUP3 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE19 DUP2 PUSH2 0xDFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE32 PUSH0 DUP4 ADD DUP5 PUSH2 0xE10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE4B PUSH0 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0xCBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE73 PUSH0 DUP4 ADD DUP5 PUSH2 0xE51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEBD PUSH1 0x1B DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC8 DUP3 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEEA DUP2 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF28 DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0xF33 DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xF4B JUMPI PUSH2 0xF4A PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF64 PUSH0 DUP4 ADD DUP6 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0xF71 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8C DUP2 PUSH2 0xF78 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xFA7 DUP2 PUSH2 0xF83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH2 0xFC1 PUSH2 0xC99 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFCF DUP5 DUP3 DUP6 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x100C PUSH1 0x13 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 DUP3 PUSH2 0xFD8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1039 DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104A DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1055 DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B65203020746F6B656E730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A7 PUSH1 0x15 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x10B2 DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D4 DUP2 PUSH2 0x109B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10EE PUSH0 DUP4 ADD DUP7 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x10FB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE51 JUMP JUMPDEST PUSH2 0x1108 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD2B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1144 PUSH1 0x13 DUP4 PUSH2 0xE79 JUMP JUMPDEST SWAP2 POP PUSH2 0x114F DUP3 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1171 DUP2 PUSH2 0x1138 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1182 DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0x118D DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x119B DUP2 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11B2 JUMPI PUSH2 0x11B1 PUSH2 0xEF1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11F0 DUP3 PUSH2 0xD22 JUMP JUMPDEST SWAP2 POP PUSH2 0x11FB DUP4 PUSH2 0xD22 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0x11B9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D PUSH28 0xE85F6DEDC154607100F4792274285DB76B41A88506AF7A35BE41A547 DUP5 SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "370:3760:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1945:384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2394:347;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;410:26:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;614:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3598:103:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1541:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3777:350;;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;474:25:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;919:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1945:384::-;1999:22;2024:6;:18;2031:10;2024:18;;;;;;;;;;;;;;;1999:43;;2076:7;2061:4;:11;;;:22;;2053:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2128:25;2142:10;2128:13;:25::i;:::-;2181:7;2166:4;:11;;;:22;;;;;;;:::i;:::-;;;;;;;;2214:7;2199:11;;:22;;;;;;;:::i;:::-;;;;;;;;2232:12;;;;;;;;;;;:21;;;2254:10;2266:7;2232:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2301:10;2292:29;;;2313:7;2292:29;;;;;;:::i;:::-;;;;;;;;1988:341;1945:384;:::o;2394:347::-;2438:25;2452:10;2438:13;:25::i;:::-;2476:15;2494:28;2511:10;2494:16;:28::i;:::-;2476:46;;2551:1;2541:7;:11;2533:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2622:7;2589:6;:18;2596:10;2589:18;;;;;;;;;;;;;;;:29;;;:40;;;;;;;:::i;:::-;;;;;;;;2640:11;;;;;;;;;;;:20;;;2661:10;2673:7;2640:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2713:10;2699:34;;;2725:7;2699:34;;;;;;:::i;:::-;;;;;;;;2427:314;2394:347::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;410:26:3:-;;;;;;;;;;;;;:::o;550:25::-;;;;:::o;614:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3598:103:3:-;1531:13:0;:11;:13::i;:::-;3685:8:3::1;3672:10;:21;;;;3598:103:::0;:::o;1541:342::-;1611:1;1601:7;:11;1593:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;1651:25;1665:10;1651:13;:25::i;:::-;1689:12;;;;;;;;;;;:25;;;1715:10;1735:4;1742:7;1689:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1790:7;1761:6;:18;1768:10;1761:18;;;;;;;;;;;;;;;:25;;;:36;;;;;;;:::i;:::-;;;;;;;;1823:7;1808:11;;:22;;;;;;;:::i;:::-;;;;;;;;1855:10;1848:27;;;1867:7;1848:27;;;;;;:::i;:::-;;;;;;;;1541:342;:::o;3777:350::-;3826:22;3851:6;:18;3858:10;3851:18;;;;;;;;;;;;;;;3826:43;;3880:14;3897:4;:11;;;3880:28;;3936:1;3927:6;:10;3919:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3988:1;3974:4;:11;;:15;;;;4015:6;4000:11;;:21;;;;;;;:::i;:::-;;;;;;;;4032:12;;;;;;;;;;;:21;;;4054:10;4066:6;4032:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4100:10;4091:28;;;4112:6;4091:28;;;;;;:::i;:::-;;;;;;;;3815:312;;3777:350::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;474:25:3:-;;;;;;;;;;;;;:::o;2828:287::-;2886:22;2911:6;:13;2918:5;2911:13;;;;;;;;;;;;;;;2886:38;;2953:1;2939:4;:11;;;:15;2935:128;;;2971:14;2988:23;3005:5;2988:16;:23::i;:::-;2971:40;;3045:6;3026:4;:15;;;:25;;;;;;;:::i;:::-;;;;;;;;2956:107;2935:128;3092:15;3073:4;:16;;:34;;;;2875:240;2828:287;:::o;3190:340::-;3254:7;3274:21;3298:6;:13;3305:5;3298:13;;;;;;;;;;;;;;;3274:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:1;3326:4;:11;;;:16;3322:30;;3351:1;3344:8;;;;;3322:30;3365:19;3405:4;:16;;;3387:15;:34;;;;:::i;:::-;3365:56;;3432:14;3492:4;3477:11;3464:10;;3450:4;:11;;;:24;;;;:::i;:::-;:38;;;;:::i;:::-;3449:47;;;;:::i;:::-;3432:64;;3516:6;3509:13;;;;;3190:340;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:442::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1664:72;1732:2;1721:9;1717:18;1708:6;1664:72;:::i;:::-;1746;1814:2;1803:9;1799:18;1790:6;1746:72;:::i;:::-;1383:442;;;;;;:::o;1831:122::-;1904:24;1922:5;1904:24;:::i;:::-;1897:5;1894:35;1884:63;;1943:1;1940;1933:12;1884:63;1831:122;:::o;1959:139::-;2005:5;2043:6;2030:20;2021:29;;2059:33;2086:5;2059:33;:::i;:::-;1959:139;;;;:::o;2104:329::-;2163:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:119;;;2218:79;;:::i;:::-;2180:119;2338:1;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2309:117;2104:329;;;;:::o;2439:60::-;2467:3;2488:5;2481:12;;2439:60;;;:::o;2505:142::-;2555:9;2588:53;2606:34;2615:24;2633:5;2615:24;:::i;:::-;2606:34;:::i;:::-;2588:53;:::i;:::-;2575:66;;2505:142;;;:::o;2653:126::-;2703:9;2736:37;2767:5;2736:37;:::i;:::-;2723:50;;2653:126;;;:::o;2785:140::-;2849:9;2882:37;2913:5;2882:37;:::i;:::-;2869:50;;2785:140;;;:::o;2931:159::-;3032:51;3077:5;3032:51;:::i;:::-;3027:3;3020:64;2931:159;;:::o;3096:250::-;3203:4;3241:2;3230:9;3226:18;3218:26;;3254:85;3336:1;3325:9;3321:17;3312:6;3254:85;:::i;:::-;3096:250;;;;:::o;3352:222::-;3445:4;3483:2;3472:9;3468:18;3460:26;;3496:71;3564:1;3553:9;3549:17;3540:6;3496:71;:::i;:::-;3352:222;;;;:::o;3580:118::-;3667:24;3685:5;3667:24;:::i;:::-;3662:3;3655:37;3580:118;;:::o;3704:222::-;3797:4;3835:2;3824:9;3820:18;3812:26;;3848:71;3916:1;3905:9;3901:17;3892:6;3848:71;:::i;:::-;3704:222;;;;:::o;3932:169::-;4016:11;4050:6;4045:3;4038:19;4090:4;4085:3;4081:14;4066:29;;3932:169;;;;:::o;4107:177::-;4247:29;4243:1;4235:6;4231:14;4224:53;4107:177;:::o;4290:366::-;4432:3;4453:67;4517:2;4512:3;4453:67;:::i;:::-;4446:74;;4529:93;4618:3;4529:93;:::i;:::-;4647:2;4642:3;4638:12;4631:19;;4290:366;;;:::o;4662:419::-;4828:4;4866:2;4855:9;4851:18;4843:26;;4915:9;4909:4;4905:20;4901:1;4890:9;4886:17;4879:47;4943:131;5069:4;4943:131;:::i;:::-;4935:139;;4662:419;;;:::o;5087:180::-;5135:77;5132:1;5125:88;5232:4;5229:1;5222:15;5256:4;5253:1;5246:15;5273:194;5313:4;5333:20;5351:1;5333:20;:::i;:::-;5328:25;;5367:20;5385:1;5367:20;:::i;:::-;5362:25;;5411:1;5408;5404:9;5396:17;;5435:1;5429:4;5426:11;5423:37;;;5440:18;;:::i;:::-;5423:37;5273:194;;;;:::o;5473:332::-;5594:4;5632:2;5621:9;5617:18;5609:26;;5645:71;5713:1;5702:9;5698:17;5689:6;5645:71;:::i;:::-;5726:72;5794:2;5783:9;5779:18;5770:6;5726:72;:::i;:::-;5473:332;;;;;:::o;5811:90::-;5845:7;5888:5;5881:13;5874:21;5863:32;;5811:90;;;:::o;5907:116::-;5977:21;5992:5;5977:21;:::i;:::-;5970:5;5967:32;5957:60;;6013:1;6010;6003:12;5957:60;5907:116;:::o;6029:137::-;6083:5;6114:6;6108:13;6099:22;;6130:30;6154:5;6130:30;:::i;:::-;6029:137;;;;:::o;6172:345::-;6239:6;6288:2;6276:9;6267:7;6263:23;6259:32;6256:119;;;6294:79;;:::i;:::-;6256:119;6414:1;6439:61;6492:7;6483:6;6472:9;6468:22;6439:61;:::i;:::-;6429:71;;6385:125;6172:345;;;;:::o;6523:169::-;6663:21;6659:1;6651:6;6647:14;6640:45;6523:169;:::o;6698:366::-;6840:3;6861:67;6925:2;6920:3;6861:67;:::i;:::-;6854:74;;6937:93;7026:3;6937:93;:::i;:::-;7055:2;7050:3;7046:12;7039:19;;6698:366;;;:::o;7070:419::-;7236:4;7274:2;7263:9;7259:18;7251:26;;7323:9;7317:4;7313:20;7309:1;7298:9;7294:17;7287:47;7351:131;7477:4;7351:131;:::i;:::-;7343:139;;7070:419;;;:::o;7495:191::-;7535:3;7554:20;7572:1;7554:20;:::i;:::-;7549:25;;7588:20;7606:1;7588:20;:::i;:::-;7583:25;;7631:1;7628;7624:9;7617:16;;7652:3;7649:1;7646:10;7643:36;;;7659:18;;:::i;:::-;7643:36;7495:191;;;;:::o;7692:171::-;7832:23;7828:1;7820:6;7816:14;7809:47;7692:171;:::o;7869:366::-;8011:3;8032:67;8096:2;8091:3;8032:67;:::i;:::-;8025:74;;8108:93;8197:3;8108:93;:::i;:::-;8226:2;8221:3;8217:12;8210:19;;7869:366;;;:::o;8241:419::-;8407:4;8445:2;8434:9;8430:18;8422:26;;8494:9;8488:4;8484:20;8480:1;8469:9;8465:17;8458:47;8522:131;8648:4;8522:131;:::i;:::-;8514:139;;8241:419;;;:::o;8666:442::-;8815:4;8853:2;8842:9;8838:18;8830:26;;8866:71;8934:1;8923:9;8919:17;8910:6;8866:71;:::i;:::-;8947:72;9015:2;9004:9;9000:18;8991:6;8947:72;:::i;:::-;9029;9097:2;9086:9;9082:18;9073:6;9029:72;:::i;:::-;8666:442;;;;;;:::o;9114:169::-;9254:21;9250:1;9242:6;9238:14;9231:45;9114:169;:::o;9289:366::-;9431:3;9452:67;9516:2;9511:3;9452:67;:::i;:::-;9445:74;;9528:93;9617:3;9528:93;:::i;:::-;9646:2;9641:3;9637:12;9630:19;;9289:366;;;:::o;9661:419::-;9827:4;9865:2;9854:9;9850:18;9842:26;;9914:9;9908:4;9904:20;9900:1;9889:9;9885:17;9878:47;9942:131;10068:4;9942:131;:::i;:::-;9934:139;;9661:419;;;:::o;10086:410::-;10126:7;10149:20;10167:1;10149:20;:::i;:::-;10144:25;;10183:20;10201:1;10183:20;:::i;:::-;10178:25;;10238:1;10235;10231:9;10260:30;10278:11;10260:30;:::i;:::-;10249:41;;10439:1;10430:7;10426:15;10423:1;10420:22;10400:1;10393:9;10373:83;10350:139;;10469:18;;:::i;:::-;10350:139;10134:362;10086:410;;;;:::o;10502:180::-;10550:77;10547:1;10540:88;10647:4;10644:1;10637:15;10671:4;10668:1;10661:15;10688:185;10728:1;10745:20;10763:1;10745:20;:::i;:::-;10740:25;;10779:20;10797:1;10779:20;:::i;:::-;10774:25;;10818:1;10808:35;;10823:18;;:::i;:::-;10808:35;10865:1;10862;10858:9;10853:14;;10688:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "936800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimRewards()": "infinite",
								"emergencyWithdraw()": "infinite",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"rewardRate()": "2536",
								"rewardToken()": "infinite",
								"stake(uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingToken()": "infinite",
								"totalStaked()": "2448",
								"transferOwnership(address)": "infinite",
								"unstake(uint256)": "infinite",
								"updateRewardRate(uint256)": "infinite"
							},
							"internal": {
								"_calculateReward(address)": "infinite",
								"_updateReward(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 370,
									"end": 4130,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1153,
									"end": 1464,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1283,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1318,
									"end": 1331,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1308,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1296,
									"end": 1308,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1296,
									"end": 1332,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1364,
									"end": 1376,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1354,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1343,
									"end": 1354,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1343,
									"end": 1377,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 1412,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1388,
									"end": 1398,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1388,
									"end": 1412,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1388,
									"end": 1412,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1388,
									"end": 1412,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1388,
									"end": 1412,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1153,
									"end": 1464,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 4130,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d7be85f6dedc154607100f4792274285db76b41a88506af7a35be41a547849164736f6c634300081e0033",
									".code": [
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "817B1CD2"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "A694FC3A"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "A694FC3A"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "DB2E21BC"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "F7C618C1"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "817B1CD2"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "9EF3A261"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "16934FC4"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "2E17DE78"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "372500AB"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "72F702F3"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "7B0A47EE"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 4130,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 919,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 919,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1945,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1945,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2394,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 410,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 410,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 550,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 614,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 614,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3598,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1541,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1541,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3777,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 499,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 474,
											"end": 499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 474,
											"end": 499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 919,
											"end": 962,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 919,
											"end": 962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2041,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2042,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2042,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2072,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2072,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2083,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2053,
											"end": 2115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2053,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2142,
											"end": 2152,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2128,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2128,
											"end": 2153,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2128,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2177,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2166,
											"end": 2188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2199,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2253,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2254,
											"end": 2264,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2266,
											"end": 2273,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2232,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2232,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2274,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2301,
											"end": 2311,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "PUSH",
											"source": 3,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 2313,
											"end": 2320,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2292,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2321,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 2329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2394,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2438,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2438,
											"end": 2463,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2438,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2494,
											"end": 2522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2494,
											"end": 2522,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2494,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2552,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2533,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2533,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2622,
											"end": 2629,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2606,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2607,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2618,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2618,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2589,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2660,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 2661,
											"end": 2671,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2640,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2640,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2640,
											"end": 2681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2723,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 2725,
											"end": 2732,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2699,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2733,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2427,
											"end": 2741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2394,
											"end": 2741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 410,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 410,
											"end": 436,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 410,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 550,
											"end": 575,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 550,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 614,
											"end": 640,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 614,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3685,
											"end": 3693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3672,
											"end": 3693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3693,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3693,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1601,
											"end": 1612,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1593,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1593,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1665,
											"end": 1675,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1651,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1651,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1689,
											"end": 1714,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1714,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1735,
											"end": 1739,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1749,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1689,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1689,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1750,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1767,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1778,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1761,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1808,
											"end": 1830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1865,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 1867,
											"end": 1874,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1848,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1875,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1541,
											"end": 1883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3777,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3869,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3897,
											"end": 3908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3897,
											"end": 3908,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 3908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3880,
											"end": 3908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3937,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3919,
											"end": 3961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3919,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 3989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3978,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 3985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 3989,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 3989,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 3989,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3974,
											"end": 3989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4000,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4044,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4053,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 4054,
											"end": 4064,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4032,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4032,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "PUSH",
											"source": 3,
											"value": "F5BB82176FEB1B5E747E28471AA92156A04D9F3AB9F45F28E2D704232B93F75"
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4091,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4091,
											"end": 4119,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 4127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3815,
											"end": 4127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 499,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 474,
											"end": 499,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 474,
											"end": 499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2828,
											"end": 3115,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2828,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2917,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2924,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2886,
											"end": 2924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2939,
											"end": 2954,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 3063,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2935,
											"end": 3063,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 2985,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2988,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2988,
											"end": 3011,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2988,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3011,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3011,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3030,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3041,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3026,
											"end": 3041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3026,
											"end": 3051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2956,
											"end": 3063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 3063,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2935,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3107,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3089,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3073,
											"end": 3089,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2875,
											"end": 3115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2828,
											"end": 3115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2828,
											"end": 3115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3530,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3190,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3311,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3274,
											"end": 3311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3342,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3337,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3337,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3342,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3351,
											"end": 3352,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3344,
											"end": 3352,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3322,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3421,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3421,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3421,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3402,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3387,
											"end": 3421,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3387,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3421,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3387,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3421,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3421,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3446,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3496,
											"name": "PUSH",
											"source": 3,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3477,
											"end": 3488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3464,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3464,
											"end": 3474,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3461,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3461,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3450,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3450,
											"end": 3488,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3450,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3450,
											"end": 3488,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3450,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3449,
											"end": 3496,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3449,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3449,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3496,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3496,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3516,
											"end": 3522,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3522,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3530,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3190,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3530,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1664,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1746,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1904,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1929,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1945,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2030,
											"end": 2050,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 2059,
											"end": 2092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2214,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2210,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2215,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2218,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2218,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2180,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 2363,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2433,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2104,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2499,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2439,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2467,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2499,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2647,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2505,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2606,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2615,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2615,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2606,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2606,
											"end": 2640,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2606,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2588,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2588,
											"end": 2641,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2588,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2575,
											"end": 2641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2647,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2779,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2653,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2736,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2736,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2773,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2736,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2785,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2913,
											"end": 2918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 2882,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2882,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2869,
											"end": 2919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2785,
											"end": 2925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 3090,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 2931,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3032,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3083,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3032,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 3090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 3090,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 3090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3346,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3096,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3203,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 3336,
											"end": 3337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3318,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3254,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3339,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 3254,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3346,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3096,
											"end": 3346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3574,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3352,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3445,
											"end": 3449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3485,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3486,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3562,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3496,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3567,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3496,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3352,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3685,
											"end": 3690,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3667,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 3667,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3662,
											"end": 3665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3692,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3797,
											"end": 3801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3824,
											"end": 3833,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3812,
											"end": 3838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3812,
											"end": 3838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3916,
											"end": 3917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3892,
											"end": 3898,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 3848,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3848,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3704,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4048,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4057,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4090,
											"end": 4094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4088,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3932,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4284,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4107,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4247,
											"end": 4276,
											"name": "PUSH",
											"source": 4,
											"value": "496E73756666696369656E74207374616B65642062616C616E63650000000000"
										},
										{
											"begin": 4243,
											"end": 4244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4231,
											"end": 4245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4277,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4284,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4107,
											"end": 4284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4656,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4290,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4432,
											"end": 4435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4517,
											"end": 4519,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 4512,
											"end": 4515,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4453,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4453,
											"end": 4520,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4453,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4446,
											"end": 4520,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4446,
											"end": 4520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 4618,
											"end": 4621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4529,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4622,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 4529,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4647,
											"end": 4649,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4638,
											"end": 4650,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4290,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 5081,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4662,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4828,
											"end": 4832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4868,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4855,
											"end": 4864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 4869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4843,
											"end": 4869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4909,
											"end": 4913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 4925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4926,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5069,
											"end": 5073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4943,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4943,
											"end": 5074,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 4943,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4935,
											"end": 5074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4935,
											"end": 5074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 5081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 5081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 5081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 5081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5087,
											"end": 5267,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5087,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5212,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5132,
											"end": 5133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5232,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5229,
											"end": 5230,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5222,
											"end": 5237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5260,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5253,
											"end": 5254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5261,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5467,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 5273,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5313,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5351,
											"end": 5352,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5333,
											"end": 5353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5333,
											"end": 5353,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5333,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5367,
											"end": 5387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5367,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5387,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5362,
											"end": 5387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5412,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5408,
											"end": 5409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5413,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5413,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5429,
											"end": 5433,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5426,
											"end": 5437,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 5440,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 5440,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5423,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5467,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5467,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5273,
											"end": 5467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5805,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 5473,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5594,
											"end": 5598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5630,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5617,
											"end": 5635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5698,
											"end": 5715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5689,
											"end": 5695,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 5645,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5645,
											"end": 5716,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 5645,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5779,
											"end": 5797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 5726,
											"end": 5798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5798,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 5726,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5805,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5805,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5473,
											"end": 5805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5901,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5811,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5881,
											"end": 5894,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5863,
											"end": 5895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5863,
											"end": 5895,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5901,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5811,
											"end": 5901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 6023,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5907,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5977,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5992,
											"end": 5997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5977,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5977,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5977,
											"end": 5998,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 5977,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 5999,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5957,
											"end": 6017,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6013,
											"end": 6014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6015,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6017,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 5957,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 6023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5907,
											"end": 6023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6166,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6029,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6083,
											"end": 6088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6114,
											"end": 6120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6108,
											"end": 6121,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6099,
											"end": 6121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6099,
											"end": 6121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6154,
											"end": 6159,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 6130,
											"end": 6160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 6130,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6166,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6166,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 6172,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6239,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6290,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6263,
											"end": 6286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6259,
											"end": 6291,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6294,
											"end": 6373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 6294,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 6256,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6492,
											"end": 6499,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6483,
											"end": 6489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6472,
											"end": 6481,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6468,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6439,
											"end": 6500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 6439,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6429,
											"end": 6500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6172,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6692,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6523,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6663,
											"end": 6684,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F207265776172647320746F20636C61696D00000000000000000000000000"
										},
										{
											"begin": 6659,
											"end": 6660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6657,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6661,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6640,
											"end": 6685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6523,
											"end": 6692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 7064,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6698,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6861,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 6920,
											"end": 6923,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6861,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 6861,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6861,
											"end": 6928,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 6861,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 6928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6854,
											"end": 6928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6937,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7026,
											"end": 7029,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6937,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6937,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6937,
											"end": 7030,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 6937,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7046,
											"end": 7058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7039,
											"end": 7058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7039,
											"end": 7058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 7064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 7064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 7064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6698,
											"end": 7064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7489,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 7070,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7236,
											"end": 7240,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7263,
											"end": 7272,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7259,
											"end": 7277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7251,
											"end": 7277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7251,
											"end": 7277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7317,
											"end": 7321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7333,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7309,
											"end": 7310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7307,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7287,
											"end": 7334,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7351,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7477,
											"end": 7481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7351,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7351,
											"end": 7482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7351,
											"end": 7482,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7351,
											"end": 7482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7343,
											"end": 7482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7489,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7070,
											"end": 7489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7686,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7495,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7535,
											"end": 7538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7554,
											"end": 7574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 7554,
											"end": 7574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7554,
											"end": 7574,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 7554,
											"end": 7574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7606,
											"end": 7607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 7588,
											"end": 7608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 7588,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7608,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7631,
											"end": 7632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7628,
											"end": 7629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7617,
											"end": 7633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7617,
											"end": 7633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7652,
											"end": 7655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7656,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7679,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7643,
											"end": 7679,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7659,
											"end": 7677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7659,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7679,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 7643,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7686,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7863,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7692,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7832,
											"end": 7855,
											"name": "PUSH",
											"source": 4,
											"value": "43616E6E6F74207374616B65203020746F6B656E730000000000000000000000"
										},
										{
											"begin": 7828,
											"end": 7829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7820,
											"end": 7826,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7816,
											"end": 7830,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7809,
											"end": 7856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7692,
											"end": 7863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 8235,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7869,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8032,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 8096,
											"end": 8098,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8032,
											"end": 8099,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 8032,
											"end": 8099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8032,
											"end": 8099,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 8032,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8099,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8108,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8197,
											"end": 8200,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8108,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 8108,
											"end": 8201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8108,
											"end": 8201,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8108,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8226,
											"end": 8228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8217,
											"end": 8229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8210,
											"end": 8229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 8235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 8235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 8235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 8235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8660,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8241,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8407,
											"end": 8411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8434,
											"end": 8443,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8422,
											"end": 8448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8422,
											"end": 8448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8494,
											"end": 8503,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8488,
											"end": 8492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8484,
											"end": 8504,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8480,
											"end": 8481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8478,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8465,
											"end": 8482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8458,
											"end": 8505,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8522,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8648,
											"end": 8652,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8522,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 8522,
											"end": 8653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8522,
											"end": 8653,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8522,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8660,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8815,
											"end": 8819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8853,
											"end": 8855,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8842,
											"end": 8851,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 8856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8830,
											"end": 8856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8830,
											"end": 8856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8919,
											"end": 8936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 8866,
											"end": 8937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 8866,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 9015,
											"end": 9017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9004,
											"end": 9013,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9000,
											"end": 9018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8991,
											"end": 8997,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 8947,
											"end": 9019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8947,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 9029,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8666,
											"end": 9108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9283,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9114,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9254,
											"end": 9275,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7468696E6720746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 9250,
											"end": 9251,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9242,
											"end": 9248,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9238,
											"end": 9252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9231,
											"end": 9276,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9114,
											"end": 9283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9289,
											"end": 9655,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9289,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9431,
											"end": 9434,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9516,
											"end": 9518,
											"name": "PUSH",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 9511,
											"end": 9514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 9452,
											"end": 9519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9452,
											"end": 9519,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9452,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9445,
											"end": 9519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9445,
											"end": 9519,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9617,
											"end": 9620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 9528,
											"end": 9621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9528,
											"end": 9621,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9528,
											"end": 9621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9646,
											"end": 9648,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9637,
											"end": 9649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9630,
											"end": 9649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9630,
											"end": 9649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9289,
											"end": 9655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9289,
											"end": 9655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9289,
											"end": 9655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9289,
											"end": 9655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 10080,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 9661,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9827,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9867,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9854,
											"end": 9863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 9868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9914,
											"end": 9923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9908,
											"end": 9912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9904,
											"end": 9924,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9889,
											"end": 9898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9902,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9878,
											"end": 9925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9942,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 10068,
											"end": 10072,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9942,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9942,
											"end": 10073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9942,
											"end": 10073,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 9942,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9934,
											"end": 10073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9934,
											"end": 10073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 10080,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 10080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 10080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 10080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10496,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 10086,
											"end": 10496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10126,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10149,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10149,
											"end": 10169,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 10149,
											"end": 10169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10149,
											"end": 10169,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 10149,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10144,
											"end": 10169,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10144,
											"end": 10169,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10201,
											"end": 10202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 10183,
											"end": 10203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10203,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10235,
											"end": 10236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10240,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10260,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10278,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10260,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 10260,
											"end": 10290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10260,
											"end": 10290,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10260,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10249,
											"end": 10290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10249,
											"end": 10290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10439,
											"end": 10440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10430,
											"end": 10437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10426,
											"end": 10441,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10423,
											"end": 10424,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10442,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10400,
											"end": 10401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10393,
											"end": 10402,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10373,
											"end": 10456,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10350,
											"end": 10489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 10469,
											"end": 10487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10469,
											"end": 10487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10350,
											"end": 10489,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10350,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10134,
											"end": 10496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10496,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10086,
											"end": 10496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10502,
											"end": 10682,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10502,
											"end": 10682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10627,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10547,
											"end": 10548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10540,
											"end": 10628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10647,
											"end": 10651,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 10644,
											"end": 10645,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10637,
											"end": 10652,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10675,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10668,
											"end": 10669,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10676,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10873,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 10688,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10728,
											"end": 10729,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10745,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10763,
											"end": 10764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 10745,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10765,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10745,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10740,
											"end": 10765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10740,
											"end": 10765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10779,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 10797,
											"end": 10798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10779,
											"end": 10799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 10779,
											"end": 10799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10779,
											"end": 10799,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 10779,
											"end": 10799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10774,
											"end": 10799,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10774,
											"end": 10799,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10818,
											"end": 10819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10808,
											"end": 10843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10808,
											"end": 10843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10823,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10823,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10823,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10823,
											"end": 10841,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 10823,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10808,
											"end": 10843,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 10808,
											"end": 10843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10862,
											"end": 10863,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10858,
											"end": 10867,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10867,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10873,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"YieldFarming.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimRewards()": "372500ab",
							"emergencyWithdraw()": "db2e21bc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRate()": "7b0a47ee",
							"rewardToken()": "f7c618c1",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78",
							"updateRewardRate(uint256)": "9ef3a261"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdated\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"updateRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"claimRewards()\":{\"details\":\"Claim accumulated rewards\"},\"emergencyWithdraw()\":{\"details\":\"Emergency withdraw (without rewards)\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"Stake tokens to start earning rewards\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"details\":\"Withdraw staked tokens\"},\"updateRewardRate(uint256)\":{\"details\":\"Owner can update reward rate\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"YieldFarming.sol\":\"YieldFarming\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"YieldFarming.sol\":{\"keccak256\":\"0xbb1505ad89e8c274d24dfe965c8a0acc9c3218b8ab4559c57c06a60d8f10740e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e55e2d691100155ff690cd6f324342ca93dcbe1b537771414daf1ca5513e06a4\",\"dweb:/ipfs/QmQ2EmAqw8LKkvMgH8s6vb2H1XwTHn1KrrCVFzbYE9P5cD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "YieldFarming.sol:YieldFarming",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 264,
								"contract": "YieldFarming.sol:YieldFarming",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 267,
								"contract": "YieldFarming.sol:YieldFarming",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 269,
								"contract": "YieldFarming.sol:YieldFarming",
								"label": "rewardRate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 271,
								"contract": "YieldFarming.sol:YieldFarming",
								"label": "totalStaked",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 283,
								"contract": "YieldFarming.sol:YieldFarming",
								"label": "stakes",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(StakeInfo)278_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(StakeInfo)278_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct YieldFarming.StakeInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeInfo)278_storage"
							},
							"t_struct(StakeInfo)278_storage": {
								"encoding": "inplace",
								"label": "struct YieldFarming.StakeInfo",
								"members": [
									{
										"astId": 273,
										"contract": "YieldFarming.sol:YieldFarming",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 275,
										"contract": "YieldFarming.sol:YieldFarming",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 277,
										"contract": "YieldFarming.sol:YieldFarming",
										"label": "lastUpdated",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:1",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "215:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "397:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "406:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "428:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "448:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:1"
									},
									"src": "391:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "628:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "637:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "660:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "685:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:1"
									},
									"src": "622:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "822:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:1"
									},
									"scope": 225,
									"src": "776:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "932:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "972:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:1"
									},
									"scope": 225,
									"src": "913:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1223:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1235:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:1"
									},
									"scope": 225,
									"src": "1205:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1568:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1583:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1623:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:1"
									},
									"scope": 225,
									"src": "1549:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2327:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2377:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:1"
									},
									"scope": 225,
									"src": "2310:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2713:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2727:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2739:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2772:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:1"
									},
									"scope": 225,
									"src": "2691:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "205:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2675:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"YieldFarming.sol": {
				"ast": {
					"absolutePath": "YieldFarming.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"IERC20": [
							225
						],
						"Ownable": [
							147
						],
						"YieldFarming": [
							625
						]
					},
					"id": 626,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 626,
							"sourceUnit": 226,
							"src": "256:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 626,
							"sourceUnit": 148,
							"src": "314:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "Ownable",
										"nameLocations": [
											"395:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "395:7:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "395:7:3"
								}
							],
							"canonicalName": "YieldFarming",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 625,
							"linearizedBaseContracts": [
								625,
								147,
								255
							],
							"name": "YieldFarming",
							"nameLocation": "379:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 264,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "424:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "410:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 263,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 262,
											"name": "IERC20",
											"nameLocations": [
												"410:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "410:6:3"
										},
										"referencedDeclaration": 225,
										"src": "410:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 267,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "488:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "474:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 266,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 265,
											"name": "IERC20",
											"nameLocations": [
												"474:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "474:6:3"
										},
										"referencedDeclaration": 225,
										"src": "474:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 269,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "565:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "550:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "550:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 271,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "629:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "614:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 270,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "614:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "YieldFarming.StakeInfo",
									"id": 278,
									"members": [
										{
											"constant": false,
											"id": 273,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "729:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 278,
											"src": "721:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 272,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "721:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 275,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "794:10:3",
											"nodeType": "VariableDeclaration",
											"scope": 278,
											"src": "786:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 274,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 277,
											"mutability": "mutable",
											"name": "lastUpdated",
											"nameLocation": "859:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 278,
											"src": "851:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 276,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "851:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "700:9:3",
									"nodeType": "StructDefinition",
									"scope": 625,
									"src": "693:218:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 283,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "956:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 625,
									"src": "919:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
										"typeString": "mapping(address => struct YieldFarming.StakeInfo)"
									},
									"typeName": {
										"id": 282,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 279,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "927:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "919:29:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
											"typeString": "mapping(address => struct YieldFarming.StakeInfo)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 281,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 280,
												"name": "StakeInfo",
												"nameLocations": [
													"938:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 278,
												"src": "938:9:3"
											},
											"referencedDeclaration": 278,
											"src": "938:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
												"typeString": "struct YieldFarming.StakeInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 289,
									"name": "Staked",
									"nameLocation": "977:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1000:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "984:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1014:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1006:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:38:3"
									},
									"src": "971:51:3"
								},
								{
									"anonymous": false,
									"eventSelector": "0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75",
									"id": 295,
									"name": "Unstaked",
									"nameLocation": "1034:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1059:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1043:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1073:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1065:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:38:3"
									},
									"src": "1028:53:3"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 301,
									"name": "RewardClaimed",
									"nameLocation": "1093:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1123:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1107:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1137:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1129:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:38:3"
									},
									"src": "1087:58:3"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1285:179:3",
										"statements": [
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 314,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1296:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 316,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "1318:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 315,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1311:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1311:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "1296:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1296:36:3"
											},
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "1343:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 322,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "1364:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 321,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "1357:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1357:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "1343:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "1343:34:3"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1388:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 327,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "1401:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1388:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "1388:24:3"
											}
										]
									},
									"id": 331,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 310,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1273:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1277:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1273:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 312,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 309,
												"name": "Ownable",
												"nameLocations": [
													"1265:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1265:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1265:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "1183:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1175:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1215:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1207:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "1246:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1238:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1164:100:3"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:3"
									},
									"scope": 625,
									"src": "1153:311:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "1582:301:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 338,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1601:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1611:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1601:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b65203020746f6b656e73",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1614:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															},
															"value": "Cannot stake 0 tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eecd47f766618d4b5150735cf627202372e65ece565609a7ceb84bb434dbec0b",
																"typeString": "literal_string \"Cannot stake 0 tokens\""
															}
														],
														"id": 337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1593:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1593:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 345,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1665:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1669:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1665:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 344,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "1651:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1651:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1651:25:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 352,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1715:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1719:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1715:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 356,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1735:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_YieldFarming_$625",
																		"typeString": "contract YieldFarming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_YieldFarming_$625",
																		"typeString": "contract YieldFarming"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1727:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 354,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1727:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1727:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 358,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "1742:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 349,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "1689:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1702:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "1689:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1689:61:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "1689:61:3"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 361,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "1761:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
																	"typeString": "mapping(address => struct YieldFarming.StakeInfo storage ref)"
																}
															},
															"id": 364,
															"indexExpression": {
																"expression": {
																	"id": 362,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1768:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1772:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1768:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1761:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage",
																"typeString": "struct YieldFarming.StakeInfo storage ref"
															}
														},
														"id": 365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1780:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "1761:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 366,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1790:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1761:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1761:36:3"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "1808:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 370,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1823:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1808:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1808:22:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 374,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1855:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1859:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1855:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "1867:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1848:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1848:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "EmitStatement",
												"src": "1843:32:3"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1472:63:3",
										"text": " @dev Stake tokens to start earning rewards"
									},
									"functionSelector": "a694fc3a",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1550:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1564:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "1556:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:17:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:0:3"
									},
									"scope": 625,
									"src": "1541:342:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1988:341:3",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2017:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 431,
														"src": "1999:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
															"typeString": "struct YieldFarming.StakeInfo"
														},
														"typeName": {
															"id": 387,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 386,
																"name": "StakeInfo",
																"nameLocations": [
																	"1999:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 278,
																"src": "1999:9:3"
															},
															"referencedDeclaration": 278,
															"src": "1999:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"baseExpression": {
														"id": 389,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "2024:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
															"typeString": "mapping(address => struct YieldFarming.StakeInfo storage ref)"
														}
													},
													"id": 392,
													"indexExpression": {
														"expression": {
															"id": 390,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2031:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2035:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2031:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2024:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$278_storage",
														"typeString": "struct YieldFarming.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1999:43:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 395,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "2061:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																		"typeString": "struct YieldFarming.StakeInfo storage pointer"
																	}
																},
																"id": 396,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2066:6:3",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 273,
																"src": "2061:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 397,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2076:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2061:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b65642062616c616e6365",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2085:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															},
															"value": "Insufficient staked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62de0d8da76f74ee61d44db19de671b1f704b747455dcaf92e282519e8ff7dd2",
																"typeString": "literal_string \"Insufficient staked balance\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2053:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "2053:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2142:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2146:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2142:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 402,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2128:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "2128:25:3"
											},
											{
												"expression": {
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 407,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "2166:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo storage pointer"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2171:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "2166:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 410,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2181:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2166:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "2166:22:3"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 413,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2199:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 414,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2214:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2199:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2199:22:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 420,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2254:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2258:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2254:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 422,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2266:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 417,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "2232:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2245:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "2232:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "2232:42:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2301:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2305:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2301:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2313:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2292:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "EmitStatement",
												"src": "2287:34:3"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "1891:48:3",
										"text": " @dev Withdraw staked tokens"
									},
									"functionSelector": "2e17de78",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1954:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:17:3"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:3"
									},
									"scope": 625,
									"src": "1945:384:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2427:314:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 437,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2452:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2456:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2452:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 436,
														"name": "_updateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "2438:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2438:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "2438:25:3"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "2484:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 477,
														"src": "2476:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2476:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 444,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2511:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2515:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2511:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "_calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2494:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2494:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2476:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 449,
																"name": "pending",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "2541:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2551:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2541:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f20636c61696d",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2554:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															},
															"value": "No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2533:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "2533:43:3"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 455,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "2589:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
																	"typeString": "mapping(address => struct YieldFarming.StakeInfo storage ref)"
																}
															},
															"id": 458,
															"indexExpression": {
																"expression": {
																	"id": 456,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2596:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2600:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2596:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2589:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage",
																"typeString": "struct YieldFarming.StakeInfo storage ref"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:10:3",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 275,
														"src": "2589:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 460,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "2622:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2589:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "2589:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 466,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2661:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2665:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2661:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "2673:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 463,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "2640:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2652:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "2640:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2640:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2640:41:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2713:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2717:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2713:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "2725:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2699:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2699:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "EmitStatement",
												"src": "2694:39:3"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2337:51:3",
										"text": " @dev Claim accumulated rewards"
									},
									"functionSelector": "372500ab",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "2403:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2415:2:3"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2427:0:3"
									},
									"scope": 625,
									"src": "2394:347:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2875:240:3",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2904:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "2886:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
															"typeString": "struct YieldFarming.StakeInfo"
														},
														"typeName": {
															"id": 485,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 484,
																"name": "StakeInfo",
																"nameLocations": [
																	"2886:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 278,
																"src": "2886:9:3"
															},
															"referencedDeclaration": 278,
															"src": "2886:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"baseExpression": {
														"id": 487,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "2911:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
															"typeString": "mapping(address => struct YieldFarming.StakeInfo storage ref)"
														}
													},
													"id": 489,
													"indexExpression": {
														"id": 488,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2918:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2911:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$278_storage",
														"typeString": "struct YieldFarming.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2886:38:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 491,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "2939:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo storage pointer"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2944:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "2939:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2953:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2939:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 508,
												"nodeType": "IfStatement",
												"src": "2935:128:3",
												"trueBody": {
													"id": 507,
													"nodeType": "Block",
													"src": "2956:107:3",
													"statements": [
														{
															"assignments": [
																496
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 496,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "2979:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 507,
																	"src": "2971:14:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 495,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2971:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 500,
															"initialValue": {
																"arguments": [
																	{
																		"id": 498,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "3005:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 497,
																	"name": "_calculateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "2988:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2988:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2971:40:3"
														},
														{
															"expression": {
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 501,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "3026:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																			"typeString": "struct YieldFarming.StakeInfo storage pointer"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3031:10:3",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 275,
																	"src": "3026:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 504,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 496,
																	"src": "3045:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3026:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "3026:25:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 509,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo storage pointer"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3078:11:3",
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "3073:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 512,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3092:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3098:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3092:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3073:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "3073:34:3"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2749:73:3",
										"text": " @dev Internal function to update user's reward state"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateReward",
									"nameLocation": "2837:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2859:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "2851:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2851:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2850:15:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2875:0:3"
									},
									"scope": 625,
									"src": "2828:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "3263:267:3",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3291:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "3274:21:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$278_memory_ptr",
															"typeString": "struct YieldFarming.StakeInfo"
														},
														"typeName": {
															"id": 526,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 525,
																"name": "StakeInfo",
																"nameLocations": [
																	"3274:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 278,
																"src": "3274:9:3"
															},
															"referencedDeclaration": 278,
															"src": "3274:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"baseExpression": {
														"id": 528,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "3298:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
															"typeString": "mapping(address => struct YieldFarming.StakeInfo storage ref)"
														}
													},
													"id": 530,
													"indexExpression": {
														"id": 529,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3305:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3298:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$278_storage",
														"typeString": "struct YieldFarming.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3274:37:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 532,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3326:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_memory_ptr",
																"typeString": "struct YieldFarming.StakeInfo memory"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3331:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3326:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3341:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3326:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 538,
												"nodeType": "IfStatement",
												"src": "3322:30:3",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3351:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 524,
													"id": 537,
													"nodeType": "Return",
													"src": "3344:8:3"
												}
											},
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "3373:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "3365:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 541,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3387:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3393:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3387:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 543,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3405:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_memory_ptr",
																"typeString": "struct YieldFarming.StakeInfo memory"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3410:11:3",
														"memberName": "lastUpdated",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "3405:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3387:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3365:56:3"
											},
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3440:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "3432:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3432:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 558,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 549,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "3450:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$278_memory_ptr",
																				"typeString": "struct YieldFarming.StakeInfo memory"
																			}
																		},
																		"id": 550,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3455:6:3",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 273,
																		"src": "3450:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 551,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "3464:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3450:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 553,
																	"name": "timeElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "3477:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3450:38:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3449:40:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3492:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3449:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3432:64:3"
											},
											{
												"expression": {
													"id": 559,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "3516:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 524,
												"id": 560,
												"nodeType": "Return",
												"src": "3509:13:3"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "3123:61:3",
										"text": " @dev Calculate pending reward for a user"
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateReward",
									"nameLocation": "3199:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3224:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "3216:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3216:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3215:15:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "3254:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3254:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3253:9:3"
									},
									"scope": 625,
									"src": "3190:340:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3661:40:3",
										"statements": [
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 570,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "3672:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 571,
														"name": "_newRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "3685:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3672:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "3672:21:3"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "3538:54:3",
										"text": " @dev Owner can update reward rate"
									},
									"functionSelector": "9ef3a261",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 568,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 567,
												"name": "onlyOwner",
												"nameLocations": [
													"3651:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3651:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3651:9:3"
										}
									],
									"name": "updateRewardRate",
									"nameLocation": "3607:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_newRate",
												"nameLocation": "3632:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3624:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3624:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:18:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3661:0:3"
									},
									"scope": 625,
									"src": "3598:103:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "3815:312:3",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3844:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "3826:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
															"typeString": "struct YieldFarming.StakeInfo"
														},
														"typeName": {
															"id": 580,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 579,
																"name": "StakeInfo",
																"nameLocations": [
																	"3826:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 278,
																"src": "3826:9:3"
															},
															"referencedDeclaration": 278,
															"src": "3826:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"baseExpression": {
														"id": 582,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "3851:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$278_storage_$",
															"typeString": "mapping(address => struct YieldFarming.StakeInfo storage ref)"
														}
													},
													"id": 585,
													"indexExpression": {
														"expression": {
															"id": 583,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3858:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3862:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3858:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3851:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$278_storage",
														"typeString": "struct YieldFarming.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3826:43:3"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "staked",
														"nameLocation": "3888:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "3880:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3880:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"expression": {
														"id": 589,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "3897:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
															"typeString": "struct YieldFarming.StakeInfo storage pointer"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3902:6:3",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 273,
													"src": "3897:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3880:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "staked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "3927:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3936:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3927:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3939:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3919:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3919:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "3919:42:3"
											},
											{
												"expression": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 599,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "3974:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$278_storage_ptr",
																"typeString": "struct YieldFarming.StakeInfo storage pointer"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3979:6:3",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "3974:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3988:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3974:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "3974:15:3"
											},
											{
												"expression": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 605,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "4000:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 606,
														"name": "staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "4015:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4000:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "4000:21:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 612,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4054:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4058:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4054:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4066:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 609,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4032:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4045:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "4032:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "4032:41:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 618,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4100:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4104:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4100:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4112:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4091:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "EmitStatement",
												"src": "4086:33:3"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3709:62:3",
										"text": " @dev Emergency withdraw (without rewards)"
									},
									"functionSelector": "db2e21bc",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "3786:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3803:2:3"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3815:0:3"
									},
									"scope": 625,
									"src": "3777:350:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 626,
							"src": "370:3760:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								289,
								295,
								301
							]
						}
					],
					"src": "33:4099:3"
				},
				"id": 3
			}
		}
	}
}